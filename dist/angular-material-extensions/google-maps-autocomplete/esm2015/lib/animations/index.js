import { animate, animateChild, animation, query, stagger, state, style, transition, trigger, useAnimation } from '@angular/animations';
const customAnimation = animation([
    style({
        opacity: '{{opacity}}',
        transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'
    }),
    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))
], {
    params: {
        duration: '200ms',
        delay: '0ms',
        opacity: '0',
        scale: '1',
        x: '0',
        y: '0',
        z: '0'
    }
});
export const InputAnimations = [
    trigger('animate', [transition('void => *', [useAnimation(customAnimation)])]),
    trigger('animateStagger', [
        state('50', style('*')),
        state('100', style('*')),
        state('200', style('*')),
        transition('void => 50', query('@*', [stagger('50ms', [animateChild()])], { optional: true })),
        transition('void => 100', query('@*', [stagger('100ms', [animateChild()])], { optional: true })),
        transition('void => 200', query('@*', [stagger('200ms', [animateChild()])], { optional: true }))
    ]),
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1tYXRlcmlhbC1leHRlbnNpb25zL2dvb2dsZS1tYXBzLWF1dG9jb21wbGV0ZS8iLCJzb3VyY2VzIjpbImxpYi9hbmltYXRpb25zL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxPQUFPLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUV0SSxNQUFNLGVBQWUsR0FBRyxTQUFTLENBQy9CO0lBQ0UsS0FBSyxDQUFDO1FBQ0osT0FBTyxFQUFFLGFBQWE7UUFDdEIsU0FBUyxFQUFFLG1EQUFtRDtLQUMvRCxDQUFDO0lBQ0YsT0FBTyxDQUFDLHVEQUF1RCxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUM3RSxFQUNEO0lBQ0UsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLE9BQU87UUFDakIsS0FBSyxFQUFFLEtBQUs7UUFDWixPQUFPLEVBQUUsR0FBRztRQUNaLEtBQUssRUFBRSxHQUFHO1FBQ1YsQ0FBQyxFQUFFLEdBQUc7UUFDTixDQUFDLEVBQUUsR0FBRztRQUNOLENBQUMsRUFBRSxHQUFHO0tBQ1A7Q0FDRixDQUNGLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUc7SUFDN0IsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFOUUsT0FBTyxDQUFDLGdCQUFnQixFQUFFO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLEtBQUssQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3hCLEtBQUssQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRXhCLFVBQVUsQ0FBQyxZQUFZLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO1FBQzVGLFVBQVUsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO1FBQzlGLFVBQVUsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0tBQy9GLENBQUM7Q0FDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHthbmltYXRlLCBhbmltYXRlQ2hpbGQsIGFuaW1hdGlvbiwgcXVlcnksIHN0YWdnZXIsIHN0YXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgdHJpZ2dlciwgdXNlQW5pbWF0aW9ufSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuXHJcbmNvbnN0IGN1c3RvbUFuaW1hdGlvbiA9IGFuaW1hdGlvbihcclxuICBbXHJcbiAgICBzdHlsZSh7XHJcbiAgICAgIG9wYWNpdHk6ICd7e29wYWNpdHl9fScsXHJcbiAgICAgIHRyYW5zZm9ybTogJ3NjYWxlKHt7c2NhbGV9fSkgdHJhbnNsYXRlM2Qoe3t4fX0sIHt7eX19LCB7e3p9fSknXHJcbiAgICB9KSxcclxuICAgIGFuaW1hdGUoJ3t7ZHVyYXRpb259fSB7e2RlbGF5fX0gY3ViaWMtYmV6aWVyKDAuMCwgMC4wLCAwLjIsIDEpJywgc3R5bGUoJyonKSlcclxuICBdLFxyXG4gIHtcclxuICAgIHBhcmFtczoge1xyXG4gICAgICBkdXJhdGlvbjogJzIwMG1zJyxcclxuICAgICAgZGVsYXk6ICcwbXMnLFxyXG4gICAgICBvcGFjaXR5OiAnMCcsXHJcbiAgICAgIHNjYWxlOiAnMScsXHJcbiAgICAgIHg6ICcwJyxcclxuICAgICAgeTogJzAnLFxyXG4gICAgICB6OiAnMCdcclxuICAgIH1cclxuICB9XHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgSW5wdXRBbmltYXRpb25zID0gW1xyXG4gIHRyaWdnZXIoJ2FuaW1hdGUnLCBbdHJhbnNpdGlvbigndm9pZCA9PiAqJywgW3VzZUFuaW1hdGlvbihjdXN0b21BbmltYXRpb24pXSldKSxcclxuXHJcbiAgdHJpZ2dlcignYW5pbWF0ZVN0YWdnZXInLCBbXHJcbiAgICBzdGF0ZSgnNTAnLCBzdHlsZSgnKicpKSxcclxuICAgIHN0YXRlKCcxMDAnLCBzdHlsZSgnKicpKSxcclxuICAgIHN0YXRlKCcyMDAnLCBzdHlsZSgnKicpKSxcclxuXHJcbiAgICB0cmFuc2l0aW9uKCd2b2lkID0+IDUwJywgcXVlcnkoJ0AqJywgW3N0YWdnZXIoJzUwbXMnLCBbYW5pbWF0ZUNoaWxkKCldKV0sIHtvcHRpb25hbDogdHJ1ZX0pKSxcclxuICAgIHRyYW5zaXRpb24oJ3ZvaWQgPT4gMTAwJywgcXVlcnkoJ0AqJywgW3N0YWdnZXIoJzEwMG1zJywgW2FuaW1hdGVDaGlsZCgpXSldLCB7b3B0aW9uYWw6IHRydWV9KSksXHJcbiAgICB0cmFuc2l0aW9uKCd2b2lkID0+IDIwMCcsIHF1ZXJ5KCdAKicsIFtzdGFnZ2VyKCcyMDBtcycsIFthbmltYXRlQ2hpbGQoKV0pXSwge29wdGlvbmFsOiB0cnVlfSkpXHJcbiAgXSksXHJcbl07XHJcbiJdfQ==