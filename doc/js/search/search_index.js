var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Location.html",[0,1.569,1,0.901]],["body/interfaces/Location.html",[0,2.25,1,1.519,2,3.56,3,1.072,4,1.293,5,1.072,6,3.56,7,0.878,8,1.519,9,2.395,10,2.395,11,3.682,12,1.031,13,0.07,14,1.072,15,0.052,16,0.062,17,0.052]],["title/components/MatGoogleMapsAutocompleteComponent.html",[18,1.298,19,1.081]],["body/components/MatGoogleMapsAutocompleteComponent.html",[1,0.486,3,0.403,4,0.486,5,0.403,7,0.33,8,0.769,9,0.7,10,0.7,12,1.103,13,0.073,14,0.637,15,0.039,16,0.031,17,0.02,18,1.374,19,1.301,20,1.648,21,1.041,22,1.338,23,1.338,24,1.041,25,3.547,26,1.697,27,1.697,28,1.041,29,1.107,30,1.66,31,0.7,32,1.648,33,1.107,34,1.701,35,2.023,36,1.562,37,1.648,38,2.627,39,1.648,40,2.117,41,1.791,42,2.044,43,1.726,44,2.044,45,2.044,46,2.627,47,0.923,48,2.324,49,1.887,50,2.117,51,2.986,52,1.107,53,1.567,54,2.532,55,1.508,56,2.29,57,1.701,58,2.532,59,2.044,60,1.887,61,2.532,62,1.887,63,2.187,64,1.648,65,1.374,66,1.66,67,1.66,68,0.7,69,1.338,70,2.324,71,2.044,72,1.887,73,1.648,74,1.338,75,0.923,76,1.182,77,0.769,78,2.117,79,1.562,80,2.181,81,1.338,82,2.023,83,1.165,84,1.338,85,1.648,86,1.338,87,1.338,88,1.338,89,1.374,90,1.338,91,1.648,92,1.648,93,1.338,94,1.887,95,1.338,96,1.648,97,1.338,98,1.338,99,1.338,100,1.338,101,2.209,102,1.338,103,1.338,104,1.338,105,1.338,106,1.085,107,1.701,108,1.338,109,2.117,110,1.338,111,1.374,112,1.338,113,2.044,114,2.072,115,1.648,116,1.257,117,1.648,118,1.648,119,1.648,120,1.338,121,1.041,122,1.338,123,1.338,124,2.044,125,1.041,126,2.117,127,1.648,128,1.338,129,1.338,130,1.091,131,2.209,132,1.887,133,1.338,134,0.403,135,1.041,136,0.486,137,0.583,138,0.846,139,0.7,140,0.846,141,0.846,142,0.7,143,1.041,144,1.338,145,1.338,146,1.338,147,1.338,148,1.338,149,0.486,150,1.041,151,1.041,152,2.044,153,1.338,154,0.846,155,2.324,156,1.041,157,1.041,158,1.648,159,1.041,160,1.648,161,1.648,162,1.648,163,1.648,164,1.648,165,1.041,166,1.041,167,1.648,168,1.041,169,1.041,170,1.338,171,1.041,172,1.338,173,1.041,174,1.041,175,1.887,176,1.041,177,1.041,178,1.648,179,1.041,180,0.486,181,1.041,182,1.041,183,1.041,184,1.041,185,1.041,186,1.338,187,1.041,188,1.041,189,1.041,190,1.041,191,1.041,192,1.041,193,1.041,194,1.041,195,1.338,196,1.338,197,1.338,198,0.846,199,2.117,200,1.041,201,0.846,202,1.338,203,1.648,204,0.403,205,2.986,206,1.338,207,0.583,208,0.583,209,1.338,210,1.041,211,1.338]],["title/directives/MatGoogleMapsAutocompleteDirective.html",[204,0.747,208,1.081]],["body/directives/MatGoogleMapsAutocompleteDirective.html",[1,0.596,3,0.494,4,0.596,5,0.494,7,0.404,8,0.9,9,0.857,10,0.857,12,1.136,13,0.073,14,0.494,15,0.044,16,0.036,17,0.024,26,1.666,27,1.666,29,1.295,30,1.887,31,0.857,32,1.276,33,1.561,34,1.295,36,0.857,41,1.937,42,2.324,43,1.7,44,2.324,45,2.324,47,1.08,48,2.589,49,2.103,52,1.295,53,1.365,56,2.466,57,1.868,60,2.103,62,2.103,63,2.258,64,1.928,65,1.561,66,1.887,67,1.887,68,0.857,70,3.261,71,2.324,72,2.103,73,1.657,75,0.714,76,0.596,77,0.596,79,1.74,80,2.305,82,1.74,83,1.002,89,0.857,94,2.103,101,2.305,106,0.9,107,1.561,111,0.857,113,2.324,114,2.191,115,1.928,116,1.298,117,1.928,118,1.928,119,1.928,121,1.076,124,2.78,125,1.276,130,1.209,131,2.15,132,2.103,134,0.494,135,1.276,136,0.596,137,0.714,138,1.036,139,0.857,140,1.036,141,1.036,142,0.857,143,1.276,149,0.596,151,1.276,152,2.324,153,1.566,154,1.036,155,2.589,156,1.276,157,1.276,158,1.928,159,1.276,160,1.928,161,1.928,162,1.928,163,1.928,164,1.928,165,1.276,166,1.276,167,1.928,168,1.276,169,1.276,171,1.276,173,1.276,174,1.276,175,1.887,176,1.276,177,1.276,178,1.928,179,1.276,180,0.596,181,1.276,182,1.276,183,1.276,184,1.276,185,1.276,186,1.036,187,1.276,188,1.276,190,1.276,191,1.276,192,1.276,193,1.276,194,1.276,204,0.746,207,0.714,208,1.08,212,4.587,213,1.64,214,3.573,215,3.328,216,1.64,217,1.64,218,1.64,219,1.64,220,1.64,221,1.64,222,1.64,223,1.64,224,1.64,225,1.64,226,1.64,227,1.64,228,1.64,229,1.64,230,1.64,231,1.64,232,1.64,233,1.64,234,1.64,235,1.64,236,1.64,237,1.64,238,1.64,239,1.64,240,1.036,241,1.64,242,1.64,243,1.64,244,1.64]],["title/modules/MatGoogleMapsAutocompleteModule.html",[245,1.081,246,0.901]],["body/modules/MatGoogleMapsAutocompleteModule.html",[1,0.971,3,0.805,4,0.971,5,0.805,13,0.072,14,1.327,15,0.039,16,0.052,17,0.039,19,2.065,26,1.601,27,1.601,41,1.165,47,1.165,53,1.271,55,1.165,73,0.971,106,0.971,121,1.427,127,2.723,130,1.352,134,0.805,136,0.971,138,2.212,139,1.83,140,2.212,141,1.689,149,0.971,180,0.971,201,1.689,208,2.065,240,1.689,245,1.165,246,1.729,247,1.165,248,0.971,249,2.466,250,1.689,251,2.212,252,3.036,253,2.08,254,2.08,255,2.08,256,2.212,257,2.08,258,1.397,259,3.499,260,2.673,261,3.901,262,2.673,263,3.901,264,3.499,265,3.036,266,3.499,267,3.499,268,3.499,269,1.689,270,3.499,271,3.499,272,3.499,273,3.499,274,2.673,275,2.08,276,2.08]],["title/directives/MatValidateAddressDirective.html",[121,0.747,204,0.747]],["body/directives/MatValidateAddressDirective.html",[3,0.728,4,0.878,5,0.728,7,0.596,8,1.188,12,0.915,13,0.073,14,0.728,15,0.036,16,0.048,17,0.036,29,1.711,31,1.264,34,1.711,35,1.711,41,2.023,43,1.617,47,1.426,53,1.714,68,1.94,73,1.618,75,1.426,76,1.188,77,1.188,79,2.079,83,0.985,89,1.264,101,2.173,106,1.444,107,1.94,116,0.878,121,1.197,128,1.528,130,1.117,134,0.728,136,0.878,139,2.361,142,1.264,149,0.878,180,1.347,186,2.068,204,0.985,207,1.053,210,2.546,251,2.068,277,4.516,278,2.417,279,3.71,280,2.546,281,3.71,282,3.272,283,3.71,284,3.272,285,3.272,286,3.71,287,3.71,288,3.272,289,3.976,290,3.976,291,3.272,292,3.272,293,3.272,294,2.417,295,2.417,296,2.417,297,3.71,298,2.417,299,2.417,300,2.417,301,2.417,302,2.417,303,3.272,304,3.272,305,2.417,306,1.881,307,2.417,308,2.417,309,2.417,310,2.417,311,3.272,312,1.881,313,2.417]],["title/injectables/MockNgZone.html",[314,1.569,315,1.931]],["body/injectables/MockNgZone.html",[3,0.839,4,1.012,5,0.839,7,0.687,8,1.306,12,0.982,13,0.072,14,0.839,15,0.041,16,0.053,17,0.041,43,1.214,47,1.567,68,2.081,72,2.752,73,1.581,75,1.567,76,1.306,77,1.306,82,1.457,83,0.839,101,2.081,106,1.446,107,1.88,114,1.88,128,1.761,130,0.839,134,0.839,149,1.012,180,1.306,258,1.88,314,2.272,315,2.798,316,2.787,317,4.458,318,3.469,319,2.787,320,2.169,321,3.596,322,3.596,323,3.596,324,2.798,325,3.596,326,4.354,327,3.596,328,3.596,329,2.272,330,3.596,331,3.596,332,2.787,333,2.798,334,3.596,335,4.206,336,3.596,337,3.596,338,2.818,339,2.787,340,4.206,341,3.596,342,2.787,343,2.787,344,3.596,345,2.169,346,2.787,347,2.787]],["title/changelog.html",[348,1.328,349,1.328,350,2.1]],["body/changelog.html",[12,0.451,13,0.052,15,0.027,16,0.04,17,0.027,19,0.796,26,0.975,27,0.975,31,0.955,33,1.404,35,1.665,36,1.665,52,0.955,53,0.975,55,0.796,57,0.955,65,0.955,83,0.808,114,0.955,116,0.664,121,0.55,130,0.55,131,1.404,137,0.796,200,2.09,202,1.155,204,0.808,245,1.17,246,0.664,247,0.796,248,1.563,306,1.422,329,1.697,338,1.155,345,1.422,351,1.827,352,2.732,353,3.51,354,1.827,355,4.147,356,4.147,357,3.635,358,2.686,359,1.827,360,1.422,361,1.827,362,4.792,363,2.981,364,3.51,365,1.827,366,1.827,367,1.827,368,3.184,369,1.827,370,1.827,371,1.827,372,1.827,373,3.145,374,1.827,375,2.536,376,3.51,377,1.422,378,2.686,379,1.827,380,1.827,381,1.827,382,1.827,383,1.827,384,3.51,385,1.827,386,1.827,387,3.145,388,1.827,389,4.147,390,1.422,391,4.458,392,1.827,393,2.09,394,1.827,395,1.827,396,3.184,397,1.827,398,1.827,399,1.827,400,1.827,401,2.686,402,2.686,403,1.422,404,1.697,405,1.827,406,1.827,407,1.827,408,1.827,409,2.686,410,3.74,411,1.827,412,1.827,413,1.827,414,1.422,415,1.827,416,1.827,417,2.686,418,2.686,419,3.184,420,1.827,421,1.827,422,1.827,423,2.686,424,1.827,425,1.827,426,1.827,427,1.827,428,1.827,429,1.827,430,1.827,431,2.686,432,1.422,433,1.827,434,1.827,435,2.686,436,1.827,437,1.827,438,1.827,439,2.686,440,2.686,441,1.827,442,1.827,443,1.827,444,1.827,445,1.827,446,1.827,447,1.827,448,1.827,449,1.827,450,1.827,451,2.686,452,1.827,453,1.827,454,1.827,455,1.827,456,1.827,457,1.827,458,1.827,459,1.827,460,1.827,461,1.827,462,1.827,463,1.827,464,1.827,465,1.697,466,1.827,467,1.827,468,1.827,469,3.145,470,1.827,471,1.827,472,1.827,473,1.827,474,2.09,475,1.827,476,2.686,477,1.827,478,1.422,479,1.827,480,1.827,481,2.09,482,2.09,483,2.686,484,1.827,485,1.827,486,1.827,487,1.827,488,1.827,489,1.827,490,1.422,491,1.827,492,1.827,493,1.827,494,2.09,495,1.827,496,1.827,497,1.422,498,1.827,499,1.827,500,1.827,501,1.827,502,1.827,503,1.827,504,1.827,505,2.686,506,1.827,507,1.827,508,1.827,509,1.827,510,1.827,511,1.827,512,1.827,513,1.827,514,1.827,515,1.827,516,1.422,517,1.422,518,1.422,519,1.827,520,1.827,521,2.686,522,1.827,523,1.422,524,1.827,525,1.422,526,1.827,527,1.827,528,1.827,529,1.827,530,1.827,531,1.827]],["title/dependencies.html",[248,1.078,375,1.098]],["body/dependencies.html",[13,0.072,15,0.053,16,0.062,17,0.053,134,1.086,136,1.311,137,1.573,240,2.281,248,1.311,269,2.281,525,2.809,532,3.609,533,2.809,534,4.601,535,2.809,536,4.215,537,2.809,538,3.609]],["title/miscellaneous/enumerations.html",[539,1.098,540,2.311]],["body/miscellaneous/enumerations.html",[7,0.884,13,0.07,15,0.053,16,0.062,17,0.053,25,2.789,26,1.525,27,1.525,28,3.267,55,1.829,83,1.382,145,2.653,146,2.653,147,2.653,148,2.653,539,1.874,540,2.789,541,3.584]],["title/miscellaneous/functions.html",[539,1.098,542,2.311]],["body/miscellaneous/functions.html",[7,0.771,12,0.954,13,0.071,15,0.046,16,0.057,17,0.046,24,3.009,75,1.911,76,1.667,77,1.593,80,2.022,106,1.667,116,1.404,153,2.444,198,1.976,338,2.444,363,1.976,375,2.022,377,3.009,539,1.635,542,2.433,543,3.866,544,4.591,545,4.198,546,3.866,547,4.198,548,3.866,549,4.198,550,3.126,551,3.126,552,3.126,553,4.386,554,3.126,555,3.126,556,2.433,557,3.126,558,3.126,559,3.009,560,3.126,561,3.126,562,3.126,563,3.126,564,3.126]],["title/index.html",[7,0.518,348,1.328,349,1.328]],["body/index.html",[1,0.92,3,0.305,5,0.305,8,0.368,9,0.53,10,0.53,11,1.69,12,0.795,13,0.073,14,0.654,15,0.037,16,0.032,17,0.05,18,1.834,20,1.314,21,0.789,26,1.407,27,1.623,29,0.53,30,1.067,33,1.325,34,0.53,35,1.766,36,2.256,37,0.789,39,0.789,41,1.226,43,0.442,49,0.641,52,0.53,53,1.227,54,0.789,55,1.325,56,1.067,57,1.325,58,0.789,59,0.789,60,0.641,61,0.789,62,0.641,63,2.287,65,0.53,66,0.641,67,0.641,73,0.368,76,0.368,77,0.368,79,1.686,80,1.943,82,0.883,83,0.305,85,0.789,89,0.53,91,2.19,92,0.789,94,1.372,96,0.789,111,1.135,116,0.368,130,1.118,131,2.188,132,1.372,134,0.305,136,0.368,137,0.736,142,0.53,145,0.641,146,0.641,147,0.641,148,0.641,149,0.789,150,0.789,154,0.641,175,1.779,180,1.171,189,0.789,198,0.641,202,1.921,203,1.69,204,0.654,207,0.442,245,1.226,246,1.022,247,0.442,248,1.104,249,1.067,250,1.067,256,0.641,265,1.314,269,1.067,275,2.365,276,1.314,280,0.789,312,0.789,318,1.69,320,1.69,324,1.314,329,2.038,333,2.19,352,0.789,357,2.628,360,1.314,363,2.846,373,3.449,375,0.53,387,0.789,390,0.789,393,2.365,403,0.789,404,0.641,414,0.789,432,0.789,465,1.372,474,0.789,478,2.957,481,1.69,482,0.789,490,0.789,494,1.314,497,1.971,516,0.789,517,0.789,518,0.789,523,1.314,533,0.789,535,0.789,537,1.314,556,0.789,559,0.789,565,3.94,566,2.171,567,2.171,568,1.013,569,1.013,570,2.533,571,1.971,572,0.789,573,1.013,574,1.689,575,1.013,576,1.013,577,1.689,578,3.224,579,1.689,580,1.689,581,1.013,582,1.013,583,1.013,584,1.013,585,1.689,586,1.013,587,1.689,588,1.689,589,1.689,590,1.013,591,1.013,592,1.013,593,1.013,594,1.013,595,1.013,596,1.013,597,1.689,598,2.171,599,1.013,600,2.171,601,1.689,602,1.689,603,1.971,604,1.689,605,1.689,606,2.171,607,1.372,608,1.013,609,0.789,610,1.013,611,1.013,612,1.013,613,1.69,614,1.013,615,1.013,616,1.689,617,3.378,618,1.013,619,1.013,620,3.378,621,1.013,622,1.314,623,1.013,624,1.689,625,1.013,626,1.689,627,1.689,628,1.689,629,1.013,630,1.013,631,1.689,632,1.013,633,1.69,634,1.013,635,1.013,636,2.533,637,1.013,638,2.171,639,2.171,640,1.013,641,1.013,642,1.013,643,1.013,644,1.013,645,1.013,646,1.013,647,2.171,648,1.013,649,1.013,650,1.013,651,1.013,652,1.013,653,2.533,654,1.013,655,1.013,656,1.013,657,1.013,658,1.013,659,1.013,660,1.013,661,1.013,662,1.689,663,1.013,664,1.689,665,1.013,666,1.013,667,1.013,668,1.013,669,1.013,670,1.013,671,1.013,672,1.013,673,1.689,674,2.171,675,1.689,676,0.789,677,1.689,678,1.013,679,1.689,680,1.013,681,1.013,682,1.013,683,3.378,684,1.013,685,1.013,686,1.013,687,1.013,688,1.013,689,2.171,690,2.171,691,1.013,692,1.013,693,1.013,694,1.013,695,1.013,696,1.689,697,1.013,698,1.013,699,1.013,700,1.013,701,1.013,702,1.013,703,1.013,704,1.013,705,1.013,706,1.689,707,2.171,708,1.013,709,2.171,710,1.013,711,1.013,712,1.013,713,1.013,714,1.013,715,1.013,716,1.013,717,1.013,718,1.013,719,1.013,720,1.013,721,1.013,722,1.013,723,1.013,724,1.013,725,1.689,726,1.013,727,2.171,728,1.689,729,1.013,730,1.013,731,1.013,732,1.013,733,1.013,734,2.171,735,2.171,736,1.013,737,1.013,738,1.013,739,1.013,740,1.013,741,1.013,742,1.013,743,1.013,744,1.013,745,1.013,746,1.013,747,1.013,748,1.013,749,1.013,750,2.171,751,1.013,752,1.013,753,1.689,754,1.689,755,1.013,756,2.171,757,1.013,758,1.013,759,1.013,760,1.013,761,1.689,762,0.789,763,1.013,764,1.013,765,1.013,766,1.689,767,1.013,768,1.013,769,1.013,770,1.689,771,1.013,772,1.013,773,1.013,774,1.013,775,1.013,776,1.689,777,2.171,778,1.689,779,1.013,780,1.013,781,1.013,782,1.013,783,1.013,784,1.013,785,1.013,786,1.689,787,1.689,788,1.013,789,1.013,790,1.013,791,0.789,792,1.013,793,1.013,794,1.013,795,1.013,796,1.013,797,1.689,798,1.689,799,2.815,800,2.815,801,1.689,802,1.013,803,1.013,804,1.689,805,1.013,806,1.013,807,1.013,808,1.013,809,1.013,810,1.013,811,0.789,812,2.533,813,2.533,814,1.013,815,1.013,816,1.013,817,1.013,818,2.171,819,1.689,820,1.689,821,1.013,822,1.013,823,1.013,824,2.533,825,2.171,826,1.689,827,1.689,828,1.013,829,1.689,830,1.689,831,1.013,832,1.013,833,2.533,834,1.013,835,1.689,836,1.689,837,1.013,838,1.013,839,1.013,840,1.013,841,1.013,842,1.013,843,1.013,844,1.013,845,1.013,846,1.013,847,1.013,848,1.013,849,1.013,850,1.013,851,1.013,852,1.314,853,1.314,854,1.013,855,1.013,856,1.013,857,1.013,858,0.789,859,0.789,860,1.013,861,1.013,862,1.314]],["title/license.html",[348,1.328,349,1.328,607,1.328]],["body/license.html",[13,0.057,15,0.046,16,0.057,17,0.046,111,1.631,258,1.631,469,2.428,571,3.005,572,3.264,603,2.428,607,1.972,609,2.428,633,2.428,676,3.005,762,2.428,791,2.428,811,2.428,852,2.428,853,2.428,858,3.264,859,2.428,862,3.005,863,3.862,864,3.12,865,3.12,866,3.12,867,3.12,868,3.12,869,3.12,870,3.862,871,4.737,872,3.12,873,3.12,874,3.12,875,3.12,876,3.862,877,3.12,878,3.12,879,3.12,880,3.12,881,3.12,882,3.12,883,3.12,884,3.12,885,3.12,886,3.862,887,3.12,888,3.12,889,3.12,890,3.12,891,3.12,892,3.862,893,3.12,894,3.12,895,3.12,896,3.12,897,3.12,898,3.12,899,3.12,900,3.12,901,3.12,902,3.12,903,3.12,904,3.12,905,3.12,906,3.12,907,3.12,908,3.12,909,3.12,910,3.12,911,3.12,912,3.12,913,3.12,914,3.12,915,3.12,916,3.12,917,3.12,918,3.12]],["title/modules.html",[247,1.452]],["body/modules.html",[13,0.064,15,0.056,16,0.064,17,0.056,246,1.374,247,1.649,404,2.391,465,2.391,919,3.784,920,3.784]],["title/overview.html",[921,2.592]],["body/overview.html",[0,2.102,13,0.07,15,0.049,16,0.059,17,0.049,18,1.739,19,2.054,121,1.419,201,2.102,207,1.449,208,2.054,245,1.75,246,1.756,248,1.208,249,2.102,250,2.102,251,2.102,252,2.588,253,2.588,254,2.588,255,2.588,256,2.538,257,2.588,258,1.739,314,2.102,613,2.588,622,3.486,921,2.588]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["02",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["02fb365",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["0faf3dc",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":622,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":525,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.1.0",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["1.2.2",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":474,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["100",{"_index":200,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"changelog.html":{}}}],["104",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":718,"title":{},"body":{"index.html":{}}}],["13.404954",{"_index":710,"title":{},"body":{"index.html":{}}}],["133",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["15526c1",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["1f88ec6",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":613,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":469,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":352,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["22b1bd5",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["2a32477",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["2cf8d4f",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["3.37.0",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["3166",{"_index":739,"title":{},"body":{"index.html":{}}}],["3f07d26",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["4058ad9",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["4238e7d",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["446bc32",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["4b1d51f",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["4fc3521",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":518,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["52.520008",{"_index":708,"title":{},"body":{"index.html":{}}}],["551743a",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["5584cae",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["5884951",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["59d34a7",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["5ad3513",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["5ad7ae2",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["5c6a295",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["60e44cd",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["66d1e24",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["69",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["69b6513",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["6b9582c",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["6ec7bb1",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["6f0e24c",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["6f91889",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["7.3.4",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["7519b8c",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["78f88ca",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["7a1804a",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["7c145d7",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["7ef4da6",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["8.1.2",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["80014cd",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["80f2005",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["859c103",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["88079ea",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["8a41a4c",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["8ebe3fb",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["9281882",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["95046fd",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["98125e2",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["9cf1106",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":835,"title":{},"body":{"index.html":{}}}],["_address",{"_index":286,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["_mapsapiloader",{"_index":78,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["_ngzone",{"_index":71,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["a025c26",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["a4378f1",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["a5f08ac",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["ab59926",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["ab9fb55",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["abeb505",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":791,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstractcontrol",{"_index":303,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["accessors",{"_index":291,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["action",{"_index":609,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_component",{"_index":211,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["add",{"_index":578,"title":{},"body":{"index.html":{}}}],["add/index.ts",{"_index":551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["added",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["adding",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":523,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addmoduletoimports",{"_index":543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimports(options",{"_index":552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addpackagejsondependencies",{"_index":545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["address",{"_index":53,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"index.html":{}}}],["address(value",{"_index":313,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["addresslabeltext",{"_index":54,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["addresssearchcontrol",{"_index":42,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["addressvalidator",{"_index":44,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["adjust",{"_index":641,"title":{},"body":{"index.html":{}}}],["administrative_area1",{"_index":807,"title":{},"body":{"index.html":{}}}],["administrative_area2",{"_index":808,"title":{},"body":{"index.html":{}}}],["administrative_area3",{"_index":810,"title":{},"body":{"index.html":{}}}],["agm",{"_index":481,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agm/core",{"_index":137,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["agmcoremodule",{"_index":678,"title":{},"body":{"index.html":{}}}],["agmcoremodule.forroot",{"_index":680,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":782,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":740,"title":{},"body":{"index.html":{}}}],["alternative",{"_index":629,"title":{},"body":{"index.html":{}}}],["alternatively",{"_index":585,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":884,"title":{},"body":{"license.html":{}}}],["angular",{"_index":363,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/animations",{"_index":533,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/cdk",{"_index":535,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":240,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":134,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":136,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/material",{"_index":269,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/platform",{"_index":403,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["animations",{"_index":635,"title":{},"body":{"index.html":{}}}],["anthony",{"_index":852,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":275,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{}}}],["apikey",{"_index":681,"title":{},"body":{"index.html":{}}}],["app",{"_index":393,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app's",{"_index":834,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":679,"title":{},"body":{"index.html":{}}}],["appearance",{"_index":55,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["appearance.standard",{"_index":85,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["application",{"_index":664,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":684,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":588,"title":{},"body":{"index.html":{}}}],["arising",{"_index":916,"title":{},"body":{"license.html":{}}}],["array",{"_index":772,"title":{},"body":{"index.html":{}}}],["assets",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":872,"title":{},"body":{"license.html":{}}}],["auth",{"_index":837,"title":{},"body":{"index.html":{}}}],["authors",{"_index":907,"title":{},"body":{"license.html":{}}}],["auto",{"_index":689,"title":{},"body":{"index.html":{}}}],["autocomplate",{"_index":576,"title":{},"body":{"index.html":{}}}],["autocomplete",{"_index":36,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["autocomplete.addlistener('place_changed",{"_index":173,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.component",{"_index":267,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["autocomplete.component.html",{"_index":40,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.scss",{"_index":38,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts",{"_index":28,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{}}}],["autocomplete.component.ts:106",{"_index":105,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:137",{"_index":110,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:142",{"_index":112,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:25",{"_index":129,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:28",{"_index":84,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:31",{"_index":93,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:34",{"_index":97,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:37",{"_index":90,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:40",{"_index":86,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:43",{"_index":81,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:46",{"_index":88,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:49",{"_index":95,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:52",{"_index":98,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:55",{"_index":100,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:59",{"_index":99,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:62",{"_index":87,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:65",{"_index":103,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:68",{"_index":102,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:71",{"_index":104,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:73",{"_index":123,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:74",{"_index":122,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:76",{"_index":120,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:79",{"_index":74,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:85",{"_index":108,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.directive",{"_index":273,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["autocomplete.directive.ts",{"_index":213,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:17",{"_index":218,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:20",{"_index":220,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:23",{"_index":221,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:26",{"_index":222,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:29",{"_index":224,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:32",{"_index":223,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:35",{"_index":219,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:38",{"_index":226,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:41",{"_index":225,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:44",{"_index":227,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:46",{"_index":234,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:47",{"_index":231,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:49",{"_index":230,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:52",{"_index":217,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:54",{"_index":236,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:55",{"_index":232,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:56",{"_index":233,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:60",{"_index":229,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:83",{"_index":228,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.getplace",{"_index":176,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.git",{"_index":823,"title":{},"body":{"index.html":{}}}],["autocomplete.module.ts",{"_index":260,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["autocomplete.module.ts:35",{"_index":262,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["autocomplete.umd.js",{"_index":656,"title":{},"body":{"index.html":{}}}],["autocomplete/bundles/google",{"_index":655,"title":{},"body":{"index.html":{}}}],["autocompleteoptions",{"_index":56,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["available",{"_index":752,"title":{},"body":{"index.html":{}}}],["b2b441f",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["babel",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["bash",{"_index":620,"title":{},"body":{"index.html":{}}}],["below",{"_index":778,"title":{},"body":{"index.html":{}}}],["beta.5",{"_index":619,"title":{},"body":{"index.html":{}}}],["beta.7",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["bf4af44",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":728,"title":{},"body":{"index.html":{}}}],["binding",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["bootstrap",{"_index":250,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{},"overview.html":{}}}],["bounds",{"_index":767,"title":{},"body":{"index.html":{}}}],["brand",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":920,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":404,"title":{},"body":{"changelog.html":{},"index.html":{},"modules.html":{}}}],["bug",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":833,"title":{},"body":{"index.html":{}}}],["built",{"_index":566,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":645,"title":{},"body":{"index.html":{}}}],["business",{"_index":801,"title":{},"body":{"index.html":{}}}],["c",{"_index":859,"title":{},"body":{"index.html":{},"license.html":{}}}],["c9feeff",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["calling",{"_index":748,"title":{},"body":{"index.html":{}}}],["calls",{"_index":755,"title":{},"body":{"index.html":{}}}],["catch((err",{"_index":193,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["cd",{"_index":829,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":432,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":796,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":350,"title":{"changelog.html":{}},"body":{}}],["character",{"_index":737,"title":{},"body":{"index.html":{}}}],["charge",{"_index":867,"title":{},"body":{"license.html":{}}}],["chat",{"_index":854,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":815,"title":{},"body":{"index.html":{}}}],["cities",{"_index":809,"title":{},"body":{"index.html":{}}}],["claim",{"_index":910,"title":{},"body":{"license.html":{}}}],["class",{"_index":149,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["cli",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":818,"title":{},"body":{"index.html":{}}}],["cluster_matgooglemapsautocompletemodule",{"_index":253,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_matgooglemapsautocompletemodule_declarations",{"_index":254,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_matgooglemapsautocompletemodule_exports",{"_index":255,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["code",{"_index":674,"title":{},"body":{"index.html":{}}}],["codes",{"_index":743,"title":{},"body":{"index.html":{}}}],["collection",{"_index":775,"title":{},"body":{"index.html":{}}}],["combine",{"_index":693,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":264,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["compatible",{"_index":741,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":690,"title":{},"body":{"index.html":{}}}],["component",{"_index":18,"title":{"components/MatGoogleMapsAutocompleteComponent.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{},"overview.html":{}}}],["component/mat",{"_index":266,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["component_template",{"_index":206,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["componentrestrictions",{"_index":154,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["components",{"_index":20,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["conditions",{"_index":891,"title":{},"body":{"license.html":{}}}],["config",{"_index":646,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":642,"title":{},"body":{"index.html":{}}}],["connection",{"_index":917,"title":{},"body":{"license.html":{}}}],["consider",{"_index":632,"title":{},"body":{"index.html":{}}}],["console.log('onautocompleteselected",{"_index":189,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["console.log('onchange",{"_index":195,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["console.log('onlocationselected",{"_index":721,"title":{},"body":{"index.html":{}}}],["console.log(err",{"_index":194,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["const",{"_index":152,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["constructor(@inject(platform_id",{"_index":241,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["constructor(_mapsapiloader",{"_index":69,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["constructor(platformid",{"_index":216,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["constructor(private",{"_index":150,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["contact",{"_index":584,"title":{},"body":{"index.html":{}}}],["content",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":596,"title":{},"body":{"index.html":{}}}],["context",{"_index":563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contract",{"_index":913,"title":{},"body":{"license.html":{}}}],["control",{"_index":306,"title":{},"body":{"directives/MatValidateAddressDirective.html":{},"changelog.html":{}}}],["copies",{"_index":886,"title":{},"body":{"license.html":{}}}],["copy",{"_index":870,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":858,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":482,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["countries",{"_index":734,"title":{},"body":{"index.html":{}}}],["country",{"_index":57,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["currently",{"_index":732,"title":{},"body":{"index.html":{}}}],["customized",{"_index":692,"title":{},"body":{"index.html":{}}}],["d",{"_index":621,"title":{},"body":{"index.html":{}}}],["d180485",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["da2e294",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["dadcddd",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":911,"title":{},"body":{"license.html":{}}}],["data",{"_index":793,"title":{},"body":{"index.html":{}}}],["dd10b9b",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":874,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":918,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":249,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{},"overview.html":{}}}],["decorators",{"_index":125,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["default",{"_index":82,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["defined",{"_index":73,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["demo",{"_index":357,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":248,"title":{"dependencies.html":{}},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":414,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deps",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":320,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["design",{"_index":567,"title":{},"body":{"index.html":{}}}],["dev",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["developers",{"_index":579,"title":{},"body":{"index.html":{}}}],["development",{"_index":605,"title":{},"body":{"index.html":{}}}],["devkit/schematics",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["df4282b",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":182,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["different",{"_index":668,"title":{},"body":{"index.html":{}}}],["directions",{"_index":757,"title":{},"body":{"index.html":{}}}],["directive",{"_index":204,"title":{"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"index.html":{}}}],["directives",{"_index":207,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{},"overview.html":{}}}],["directives/address",{"_index":138,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["directives/mat",{"_index":272,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["directory",{"_index":827,"title":{},"body":{"index.html":{}}}],["distance",{"_index":758,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":882,"title":{},"body":{"license.html":{}}}],["docs",{"_index":345,"title":{},"body":{"injectables/MockNgZone.html":{},"changelog.html":{}}}],["documentation",{"_index":603,"title":{},"body":{"index.html":{},"license.html":{}}}],["dom",{"_index":23,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["downgraded",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["drop",{"_index":850,"title":{},"body":{"index.html":{}}}],["dual",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["ea16bb7",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["eca3761",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["ede64ca",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":790,"title":{},"body":{"index.html":{}}}],["element",{"_index":203,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["elementref",{"_index":124,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["elemref",{"_index":214,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["email",{"_index":851,"title":{},"body":{"index.html":{}}}],["emit",{"_index":184,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["enable",{"_index":574,"title":{},"body":{"index.html":{}}}],["encapsulation",{"_index":700,"title":{},"body":{"index.html":{}}}],["end",{"_index":672,"title":{},"body":{"index.html":{}}}],["enter",{"_index":92,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["enum",{"_index":144,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["enumerations",{"_index":540,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["errors",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["establishment",{"_index":787,"title":{},"body":{"index.html":{}}}],["even",{"_index":769,"title":{},"body":{"index.html":{}}}],["event",{"_index":111,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{},"license.html":{}}}],["eventemitter",{"_index":101,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["eventemitter(false",{"_index":344,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["eventemitter.subscribe((address",{"_index":309,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["everything",{"_index":627,"title":{},"body":{"index.html":{}}}],["exact",{"_index":665,"title":{},"body":{"index.html":{}}}],["example",{"_index":332,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["exception",{"_index":783,"title":{},"body":{"index.html":{}}}],["exists",{"_index":795,"title":{},"body":{"index.html":{}}}],["explanatory",{"_index":813,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":774,"title":{},"body":{"index.html":{}}}],["export",{"_index":14,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["exportas",{"_index":32,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["exports",{"_index":252,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["express",{"_index":898,"title":{},"body":{"license.html":{}}}],["expression",{"_index":164,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["extends",{"_index":331,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["extensions",{"_index":590,"title":{},"body":{"index.html":{}}}],["extensions.github.io/google",{"_index":611,"title":{},"body":{"index.html":{}}}],["extensions/combination",{"_index":848,"title":{},"body":{"index.html":{}}}],["extensions/contacts",{"_index":847,"title":{},"body":{"index.html":{}}}],["extensions/faq",{"_index":846,"title":{},"body":{"index.html":{}}}],["extensions/google",{"_index":565,"title":{},"body":{"index.html":{}}}],["extensions/link",{"_index":842,"title":{},"body":{"index.html":{}}}],["extensions/pages",{"_index":841,"title":{},"body":{"index.html":{}}}],["extensions/password",{"_index":844,"title":{},"body":{"index.html":{}}}],["external",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["f2b7b63",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["f428a82",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["failed",{"_index":185,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["false",{"_index":128,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["feature",{"_index":577,"title":{},"body":{"index.html":{}}}],["features",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":517,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["files",{"_index":873,"title":{},"body":{"license.html":{}}}],["fill",{"_index":146,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filter",{"_index":733,"title":{},"body":{"index.html":{}}}],["firebaseui",{"_index":838,"title":{},"body":{"index.html":{}}}],["firebaseui/ng",{"_index":840,"title":{},"body":{"index.html":{}}}],["fired",{"_index":797,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":903,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["flush",{"_index":325,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["fn",{"_index":340,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["follow",{"_index":816,"title":{},"body":{"index.html":{}}}],["following",{"_index":633,"title":{},"body":{"index.html":{},"license.html":{}}}],["form",{"_index":494,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["formcontrol",{"_index":113,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["formcontrol({value",{"_index":115,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["forms",{"_index":637,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":270,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["forroot",{"_index":261,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["forwardref",{"_index":283,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["free",{"_index":866,"title":{},"body":{"license.html":{}}}],["full",{"_index":198,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["function",{"_index":338,"title":{},"body":{"injectables/MockNgZone.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["function(options",{"_index":564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functions",{"_index":542,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":889,"title":{},"body":{"license.html":{}}}],["general",{"_index":780,"title":{},"body":{"index.html":{}}}],["generator",{"_index":849,"title":{},"body":{"index.html":{}}}],["geocode",{"_index":786,"title":{},"body":{"index.html":{}}}],["geocoding",{"_index":756,"title":{},"body":{"index.html":{}}}],["geolocation",{"_index":713,"title":{},"body":{"index.html":{}}}],["getaddress",{"_index":299,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["getpackageversionfrompackagejson",{"_index":546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpackageversionfrompackagejson(tree",{"_index":554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getplace",{"_index":749,"title":{},"body":{"index.html":{}}}],["gets",{"_index":555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":348,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":821,"title":{},"body":{"index.html":{}}}],["gitter",{"_index":855,"title":{},"body":{"index.html":{}}}],["given",{"_index":559,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["google",{"_index":26,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["google.maps.places.autocomplete(this.elemref.nativeelement",{"_index":244,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["google.maps.places.autocomplete(this.searchelementref.nativeelement",{"_index":172,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["google.maps.places.autocompleteoptions",{"_index":143,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["google.maps.places.placeresult",{"_index":142,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["goolgle",{"_index":575,"title":{},"body":{"index.html":{}}}],["gracefully",{"_index":562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["granted",{"_index":865,"title":{},"body":{"license.html":{}}}],["groups",{"_index":731,"title":{},"body":{"index.html":{}}}],["gulp",{"_index":825,"title":{},"body":{"index.html":{}}}],["heart",{"_index":580,"title":{},"body":{"index.html":{}}}],["help",{"_index":856,"title":{},"body":{"index.html":{}}}],["here",{"_index":589,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":864,"title":{},"body":{"license.html":{}}}],["hesitate",{"_index":583,"title":{},"body":{"index.html":{}}}],["higher",{"_index":614,"title":{},"body":{"index.html":{}}}],["holders",{"_index":908,"title":{},"body":{"license.html":{}}}],["home",{"_index":697,"title":{},"body":{"index.html":{}}}],["home.component.html",{"_index":698,"title":{},"body":{"index.html":{}}}],["home.component.scss",{"_index":699,"title":{},"body":{"index.html":{}}}],["homecomponent",{"_index":702,"title":{},"body":{"index.html":{}}}],["hosted",{"_index":831,"title":{},"body":{"index.html":{}}}],["html",{"_index":202,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"changelog.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":832,"title":{},"body":{"index.html":{}}}],["https://angular",{"_index":610,"title":{},"body":{"index.html":{}}}],["https://github.com/angular",{"_index":822,"title":{},"body":{"index.html":{}}}],["https://github.com/angular/angular/blob/master/packages/core/testing/src/ng_zone_mock.ts",{"_index":330,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["https://github.com/angular/angular/blob/master/packages/forms/src/directives/validators.ts",{"_index":305,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["id",{"_index":753,"title":{},"body":{"index.html":{}}}],["ids",{"_index":747,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":323,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["implements",{"_index":29,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["implied",{"_index":899,"title":{},"body":{"license.html":{}}}],["import",{"_index":130,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"index.html":{}}}],["imported",{"_index":663,"title":{},"body":{"index.html":{}}}],["imports",{"_index":276,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{}}}],["include",{"_index":599,"title":{},"body":{"index.html":{}}}],["included",{"_index":811,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":876,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["initgooglemapsautocomplete",{"_index":48,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["initialize",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":237,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["inject(platform_id",{"_index":235,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["injectable",{"_index":314,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{},"overview.html":{}}}],["injectables",{"_index":316,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["input",{"_index":131,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["inputs",{"_index":52,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["install",{"_index":617,"title":{},"body":{"index.html":{}}}],["installation",{"_index":601,"title":{},"body":{"index.html":{}}}],["installed",{"_index":658,"title":{},"body":{"index.html":{}}}],["installpackagejsondependencies",{"_index":547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instance",{"_index":694,"title":{},"body":{"index.html":{}}}],["instruct",{"_index":744,"title":{},"body":{"index.html":{}}}],["instructs",{"_index":799,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Location.html":{}},"body":{"interfaces/Location.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Location.html":{}}}],["interfaces/location.interface",{"_index":141,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["invalid",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["invaliderrortext",{"_index":58,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["iso",{"_index":738,"title":{},"body":{"index.html":{}}}],["isplatformbrowser",{"_index":239,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":242,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["issue",{"_index":360,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["javascript",{"_index":726,"title":{},"body":{"index.html":{}}}],["jest",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":653,"title":{},"body":{"index.html":{}}}],["kind",{"_index":897,"title":{},"body":{"license.html":{}}}],["latitude",{"_index":9,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["layout",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["learn",{"_index":625,"title":{},"body":{"index.html":{}}}],["legacy",{"_index":148,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["legend",{"_index":201,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["level",{"_index":671,"title":{},"body":{"index.html":{}}}],["liability",{"_index":912,"title":{},"body":{"license.html":{}}}],["liable",{"_index":909,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":606,"title":{},"body":{"index.html":{}}}],["library",{"_index":497,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":607,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":860,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":877,"title":{},"body":{"license.html":{}}}],["limited",{"_index":900,"title":{},"body":{"license.html":{}}}],["line:no",{"_index":162,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["link",{"_index":824,"title":{},"body":{"index.html":{}}}],["linkifyjs",{"_index":839,"title":{},"body":{"index.html":{}}}],["lint",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":662,"title":{},"body":{"index.html":{}}}],["listed",{"_index":776,"title":{},"body":{"index.html":{}}}],["load",{"_index":171,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["loader",{"_index":651,"title":{},"body":{"index.html":{}}}],["loadpackageversiongracefully",{"_index":548,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadpackageversiongracefully(context",{"_index":560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loads",{"_index":561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["locality",{"_index":804,"title":{},"body":{"index.html":{}}}],["locally",{"_index":604,"title":{},"body":{"index.html":{}}}],["location",{"_index":1,"title":{"interfaces/Location.html":{}},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{}}}],["location.latitude",{"_index":722,"title":{},"body":{"index.html":{}}}],["location.longitude",{"_index":723,"title":{},"body":{"index.html":{}}}],["longitude",{"_index":10,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["look",{"_index":652,"title":{},"body":{"index.html":{}}}],["looking",{"_index":557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loudspeaker",{"_index":594,"title":{},"body":{"index.html":{}}}],["made",{"_index":751,"title":{},"body":{"index.html":{}}}],["main",{"_index":659,"title":{},"body":{"index.html":{}}}],["map",{"_index":647,"title":{},"body":{"index.html":{}}}],["maps",{"_index":27,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mapsapiloader",{"_index":70,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["mat",{"_index":35,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"index.html":{}}}],["match",{"_index":770,"title":{},"body":{"index.html":{}}}],["matching",{"_index":16,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":373,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["material2's",{"_index":573,"title":{},"body":{"index.html":{}}}],["matgooglemapsautocomplete",{"_index":33,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["matgooglemapsautocomplete]'},{'name",{"_index":209,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["matgooglemapsautocompletecomponent",{"_index":19,"title":{"components/MatGoogleMapsAutocompleteComponent.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"overview.html":{}}}],["matgooglemapsautocompletedirective",{"_index":208,"title":{"directives/MatGoogleMapsAutocompleteDirective.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["matgooglemapsautocompletemodule",{"_index":246,"title":{"modules/MatGoogleMapsAutocompleteModule.html":{}},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matgooglemapsautocompletemodule.forroot",{"_index":677,"title":{},"body":{"index.html":{}}}],["matinputmodule",{"_index":268,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["matrix",{"_index":759,"title":{},"body":{"index.html":{}}}],["matvalidateaddress",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["matvalidateaddressdirective",{"_index":121,"title":{"directives/MatValidateAddressDirective.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"overview.html":{}}}],["mechanism",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":902,"title":{},"body":{"license.html":{}}}],["merge",{"_index":880,"title":{},"body":{"license.html":{}}}],["merged",{"_index":794,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":31,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{}}}],["method",{"_index":666,"title":{},"body":{"index.html":{}}}],["methods",{"_index":47,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["minor",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":539,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":862,"title":{},"body":{"index.html":{},"license.html":{}}}],["mix",{"_index":785,"title":{},"body":{"index.html":{}}}],["mock",{"_index":321,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockngzone",{"_index":315,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["modify",{"_index":879,"title":{},"body":{"license.html":{}}}],["module",{"_index":245,"title":{"modules/MatGoogleMapsAutocompleteModule.html":{}},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["module's",{"_index":274,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["modules",{"_index":247,"title":{"modules.html":{}},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":263,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["more",{"_index":626,"title":{},"body":{"index.html":{}}}],["multi",{"_index":284,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["multiple",{"_index":742,"title":{},"body":{"index.html":{}}}],["nahas",{"_index":853,"title":{},"body":{"index.html":{},"license.html":{}}}],["name",{"_index":76,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":826,"title":{},"body":{"index.html":{}}}],["navigator",{"_index":714,"title":{},"body":{"index.html":{}}}],["navigator.geolocation.getcurrentposition((position",{"_index":715,"title":{},"body":{"index.html":{}}}],["need",{"_index":616,"title":{},"body":{"index.html":{}}}],["needs",{"_index":648,"title":{},"body":{"index.html":{}}}],["new",{"_index":114,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{}}}],["next",{"_index":161,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["ng",{"_index":318,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["ng_validators",{"_index":281,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["ngmodule",{"_index":265,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{}}}],["ngoninit",{"_index":49,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["ngx",{"_index":836,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":72,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"injectables/MockNgZone.html":{}}}],["node_module",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["node_modules/@angular",{"_index":654,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":906,"title":{},"body":{"license.html":{}}}],["note",{"_index":788,"title":{},"body":{"index.html":{}}}],["note:if",{"_index":640,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":779,"title":{},"body":{"index.html":{}}}],["notice",{"_index":676,"title":{},"body":{"index.html":{},"license.html":{}}}],["now",{"_index":570,"title":{},"body":{"index.html":{}}}],["npm",{"_index":478,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":116,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["number",{"_index":11,"title":{},"body":{"interfaces/Location.html":{},"index.html":{}}}],["object",{"_index":750,"title":{},"body":{"index.html":{}}}],["object.assign(this.autocompleteoptions",{"_index":168,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["obtaining",{"_index":869,"title":{},"body":{"license.html":{}}}],["official",{"_index":725,"title":{},"body":{"index.html":{}}}],["onaddressselected",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["onautocompleteselected",{"_index":65,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["onautocompleteselected(result",{"_index":719,"title":{},"body":{"index.html":{}}}],["once",{"_index":657,"title":{},"body":{"index.html":{}}}],["onchange",{"_index":66,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["one",{"_index":792,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":30,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["onlocationselected",{"_index":67,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["onlocationselected(location",{"_index":720,"title":{},"body":{"index.html":{}}}],["onnewplaceresult",{"_index":45,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["onquery",{"_index":50,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["onquery(event",{"_index":109,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["onstable",{"_index":326,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["open",{"_index":587,"title":{},"body":{"index.html":{}}}],["option",{"_index":727,"title":{},"body":{"index.html":{}}}],["optional",{"_index":77,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":153,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"miscellaneous/functions.html":{}}}],["options.componentrestrictions",{"_index":165,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["options.push",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["options.types",{"_index":166,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["othercomponent",{"_index":686,"title":{},"body":{"index.html":{}}}],["othermodule",{"_index":687,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":915,"title":{},"body":{"license.html":{}}}],["out",{"_index":258,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"injectables/MockNgZone.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":147,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":132,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["outputs",{"_index":64,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["outside",{"_index":768,"title":{},"body":{"index.html":{}}}],["overview",{"_index":921,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":375,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["package.json",{"_index":558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages",{"_index":634,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":75,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":661,"title":{},"body":{"index.html":{}}}],["particular",{"_index":904,"title":{},"body":{"license.html":{}}}],["passed",{"_index":735,"title":{},"body":{"index.html":{}}}],["path",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":597,"title":{},"body":{"index.html":{}}}],["permission",{"_index":863,"title":{},"body":{"license.html":{}}}],["permit",{"_index":887,"title":{},"body":{"license.html":{}}}],["person",{"_index":868,"title":{},"body":{"license.html":{}}}],["persons",{"_index":888,"title":{},"body":{"license.html":{}}}],["place",{"_index":175,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["place.formatted_address",{"_index":187,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["place.geometry",{"_index":178,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["place.geometry.location.lat",{"_index":191,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["place.geometry.location.lng",{"_index":192,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["place.place_id",{"_index":177,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["placeholder",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["placeholdertext",{"_index":59,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["placeidonly",{"_index":60,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["placeresult",{"_index":79,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["places",{"_index":683,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":238,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["platformid",{"_index":215,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["please",{"_index":91,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["point",{"_index":643,"title":{},"body":{"index.html":{}}}],["portions",{"_index":894,"title":{},"body":{"license.html":{}}}],["position.coords.latitude",{"_index":716,"title":{},"body":{"index.html":{}}}],["position.coords.longitude",{"_index":717,"title":{},"body":{"index.html":{}}}],["postal_code",{"_index":806,"title":{},"body":{"index.html":{}}}],["postcss",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["pr",{"_index":586,"title":{},"body":{"index.html":{}}}],["precise",{"_index":802,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":843,"title":{},"body":{"index.html":{}}}],["private",{"_index":43,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["project",{"_index":390,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["provide",{"_index":280,"title":{},"body":{"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["provided",{"_index":895,"title":{},"body":{"license.html":{}}}],["providers",{"_index":251,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"overview.html":{}}}],["public",{"_index":41,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["publish",{"_index":881,"title":{},"body":{"license.html":{}}}],["punch",{"_index":857,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":905,"title":{},"body":{"license.html":{}}}],["question",{"_index":581,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":271,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["recommended",{"_index":623,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["region",{"_index":766,"title":{},"body":{"index.html":{}}}],["regions",{"_index":803,"title":{},"body":{"index.html":{}}}],["remaining",{"_index":660,"title":{},"body":{"index.html":{}}}],["removed",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["rendering",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":819,"title":{},"body":{"index.html":{}}}],["required",{"_index":96,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["requirederrortext",{"_index":61,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["requirements",{"_index":598,"title":{},"body":{"index.html":{}}}],["requires",{"_index":612,"title":{},"body":{"index.html":{}}}],["reset",{"_index":257,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["resetaddress",{"_index":51,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["restrict",{"_index":729,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":875,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":17,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["retrieve",{"_index":746,"title":{},"body":{"index.html":{}}}],["return",{"_index":180,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["returned",{"_index":754,"title":{},"body":{"index.html":{}}}],["returns",{"_index":106,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":878,"title":{},"body":{"license.html":{}}}],["rollup",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":669,"title":{},"body":{"index.html":{}}}],["rule",{"_index":553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":333,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["run(fn",{"_index":337,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["running",{"_index":820,"title":{},"body":{"index.html":{}}}],["runoutsideangular",{"_index":334,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":341,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["safely",{"_index":784,"title":{},"body":{"index.html":{}}}],["same",{"_index":789,"title":{},"body":{"index.html":{}}}],["save",{"_index":630,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":387,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["script",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["searchelementref",{"_index":46,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["second",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":183,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["selected",{"_index":798,"title":{},"body":{"index.html":{}}}],["selectedaddress",{"_index":703,"title":{},"body":{"index.html":{}}}],["selector",{"_index":34,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["self",{"_index":812,"title":{},"body":{"index.html":{}}}],["sell",{"_index":885,"title":{},"body":{"license.html":{}}}],["serve",{"_index":828,"title":{},"body":{"index.html":{}}}],["service",{"_index":800,"title":{},"body":{"index.html":{}}}],["services",{"_index":760,"title":{},"body":{"index.html":{}}}],["set",{"_index":312,"title":{},"body":{"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["setaddress(value",{"_index":301,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["setcurrentposition",{"_index":712,"title":{},"body":{"index.html":{}}}],["setting",{"_index":814,"title":{},"body":{"index.html":{}}}],["setup",{"_index":624,"title":{},"body":{"index.html":{}}}],["shall",{"_index":892,"title":{},"body":{"license.html":{}}}],["sharing",{"_index":593,"title":{},"body":{"index.html":{}}}],["shell",{"_index":628,"title":{},"body":{"index.html":{}}}],["show",{"_index":181,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["similar",{"_index":675,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["simply",{"_index":685,"title":{},"body":{"index.html":{}}}],["simulatezoneexit",{"_index":335,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":781,"title":{},"body":{"index.html":{}}}],["slightly",{"_index":667,"title":{},"body":{"index.html":{}}}],["software",{"_index":871,"title":{},"body":{"license.html":{}}}],["solved",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["specific",{"_index":730,"title":{},"body":{"index.html":{}}}],["specified",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["specifies",{"_index":773,"title":{},"body":{"index.html":{}}}],["specifying",{"_index":761,"title":{},"body":{"index.html":{}}}],["src/.../index.ts",{"_index":544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mat",{"_index":541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/module/component/mat",{"_index":25,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/module/directives/address",{"_index":277,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["src/module/directives/mat",{"_index":212,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["src/module/interfaces/location.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Location.html":{}}}],["src/module/mat",{"_index":259,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["src/module/testing/mock",{"_index":317,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["src/schematics/src/ng",{"_index":550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ssr",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":615,"title":{},"body":{"index.html":{}}}],["standard",{"_index":145,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["star",{"_index":592,"title":{},"body":{"index.html":{}}}],["starring",{"_index":591,"title":{},"body":{"index.html":{}}}],["start",{"_index":830,"title":{},"body":{"index.html":{}}}],["started",{"_index":349,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":127,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["stating",{"_index":568,"title":{},"body":{"index.html":{}}}],["strength",{"_index":845,"title":{},"body":{"index.html":{}}}],["strictbounds",{"_index":62,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["strictly",{"_index":764,"title":{},"body":{"index.html":{}}}],["string",{"_index":80,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["style",{"_index":516,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styles",{"_index":22,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["styleurls",{"_index":37,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["subject",{"_index":890,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":883,"title":{},"body":{"license.html":{}}}],["sublocality",{"_index":805,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":288,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["subscribe(eventemitter",{"_index":293,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["subscription",{"_index":287,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["subscriptions",{"_index":327,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["substantial",{"_index":893,"title":{},"body":{"license.html":{}}}],["suggestion",{"_index":582,"title":{},"body":{"index.html":{}}}],["super({enablelongstacktrace",{"_index":346,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["support",{"_index":465,"title":{},"body":{"changelog.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":777,"title":{},"body":{"index.html":{}}}],["svg",{"_index":919,"title":{},"body":{"modules.html":{}}}],["synchronous",{"_index":322,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["system",{"_index":650,"title":{},"body":{"index.html":{}}}],["systemjs",{"_index":639,"title":{},"body":{"index.html":{}}}],["table",{"_index":595,"title":{},"body":{"index.html":{}}}],["target",{"_index":688,"title":{},"body":{"index.html":{}}}],["tell",{"_index":649,"title":{},"body":{"index.html":{}}}],["template",{"_index":21,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["templateurl",{"_index":39,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["tests",{"_index":328,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["theme",{"_index":600,"title":{},"body":{"index.html":{}}}],["this._address",{"_index":311,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["this._mapsapiloader",{"_index":170,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["this._ngzone.run",{"_index":174,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.address",{"_index":186,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{}}}],["this.addresssearchcontrol.updatevalueandvalidity",{"_index":197,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["this.addressvalidator.subscribe(this.onnewplaceresult",{"_index":151,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.addressvalidator.validate",{"_index":119,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.autocompleteoptions",{"_index":167,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.country",{"_index":155,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.initgooglemapsautocomplete",{"_index":169,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.latitude",{"_index":707,"title":{},"body":{"index.html":{}}}],["this.longitude",{"_index":709,"title":{},"body":{"index.html":{}}}],["this.mapsapiloader",{"_index":243,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.onautocompleteselected.emit(place",{"_index":188,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.onchange.emit(this.address",{"_index":196,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["this.onlocationselected.emit",{"_index":190,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.onstable.emit(null",{"_index":347,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.placeidonly",{"_index":156,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.setcurrentposition",{"_index":711,"title":{},"body":{"index.html":{}}}],["this.strictbounds",{"_index":157,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.subscription",{"_index":308,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["this.subscription.unsubscribe",{"_index":310,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["this.titleservice.settitle('home",{"_index":705,"title":{},"body":{"index.html":{}}}],["this.type",{"_index":159,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.types",{"_index":158,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.zoom",{"_index":706,"title":{},"body":{"index.html":{}}}],["those",{"_index":763,"title":{},"body":{"index.html":{}}}],["title",{"_index":696,"title":{},"body":{"index.html":{}}}],["titleservice",{"_index":704,"title":{},"body":{"index.html":{}}}],["token",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":670,"title":{},"body":{"index.html":{}}}],["tort",{"_index":914,"title":{},"body":{"license.html":{}}}],["transpile",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":24,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":285,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["tslint:disable",{"_index":160,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["tutorial",{"_index":817,"title":{},"body":{"index.html":{}}}],["two",{"_index":736,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["types",{"_index":63,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["types/googlemaps",{"_index":537,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typescript",{"_index":490,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typo",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":631,"title":{},"body":{"index.html":{}}}],["umd",{"_index":644,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["under",{"_index":861,"title":{},"body":{"index.html":{}}}],["unexpected",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["unnamed",{"_index":549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unsubscribe",{"_index":289,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["unused",{"_index":163,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["up",{"_index":673,"title":{},"body":{"index.html":{}}}],["updated",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":602,"title":{},"body":{"index.html":{}}}],["use",{"_index":571,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":324,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["useexisting",{"_index":282,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["user",{"_index":771,"title":{},"body":{"index.html":{}}}],["using",{"_index":638,"title":{},"body":{"index.html":{}}}],["v1",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":618,"title":{},"body":{"index.html":{}}}],["v1.3.0",{"_index":569,"title":{},"body":{"index.html":{}}}],["v2.9.2",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["v7",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["v7.0.13",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["v7.2.1",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["v7.2.12",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["v7.3.1",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["v7.3.4",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["v7.x",{"_index":636,"title":{},"body":{"index.html":{}}}],["v8",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":89,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["validate",{"_index":290,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validate][formcontrolname],[matvalidateaddress][formcontrol],[matvalidateaddress][ngmodel",{"_index":210,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatValidateAddressDirective.html":{}}}],["validateaddress",{"_index":307,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validationerrors",{"_index":304,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator",{"_index":279,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator's",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["validator.directive",{"_index":140,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["validator.directive.ts",{"_index":278,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:15",{"_index":298,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:17",{"_index":292,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:23",{"_index":296,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:33",{"_index":294,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:39",{"_index":295,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:43",{"_index":300,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:47",{"_index":302,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator/mat",{"_index":139,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{}}}],["validatorfn",{"_index":297,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validators",{"_index":135,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["validators.compose",{"_index":117,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["validators.required",{"_index":118,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["value",{"_index":83,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["var",{"_index":205,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["version",{"_index":377,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["via",{"_index":329,"title":{},"body":{"injectables/MockNgZone.html":{},"changelog.html":{},"index.html":{}}}],["view",{"_index":608,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":133,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["viewchild('search",{"_index":126,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["viewencapsulation",{"_index":695,"title":{},"body":{"index.html":{}}}],["viewencapsulation.none",{"_index":701,"title":{},"body":{"index.html":{}}}],["visit",{"_index":724,"title":{},"body":{"index.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["warranties",{"_index":901,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":896,"title":{},"body":{"license.html":{}}}],["well",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":762,"title":{},"body":{"index.html":{},"license.html":{}}}],["widget",{"_index":745,"title":{},"body":{"index.html":{}}}],["width",{"_index":199,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["within",{"_index":765,"title":{},"body":{"index.html":{}}}],["without",{"_index":572,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrapper",{"_index":691,"title":{},"body":{"index.html":{}}}],["your_key",{"_index":682,"title":{},"body":{"index.html":{}}}],["zone.ts",{"_index":319,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zone.ts:21",{"_index":336,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zone.ts:27",{"_index":339,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zone.ts:31",{"_index":342,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zone.ts:35",{"_index":343,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zoom",{"_index":256,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/interfaces/location.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  latitude: number,\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatGoogleMapsAutocompleteComponent.html":{"url":"components/MatGoogleMapsAutocompleteComponent.html","title":"component - MatGoogleMapsAutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatGoogleMapsAutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/module/component/mat-google-maps-autocomplete.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n            \n                exportAs\n                matGoogleMapsAutocomplete\n            \n\n\n\n\n\n\n\n            \n                selector\n                mat-google-maps-autocomplete\n            \n\n            \n                styleUrls\n                ./mat-google-maps-autocomplete.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mat-google-maps-autocomplete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressSearchControl\n                            \n                            \n                                    Private\n                                addressValidator\n                            \n                            \n                                    Private\n                                onNewPlaceResult\n                            \n                            \n                                    Public\n                                searchElementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initGoogleMapsAutocomplete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onQuery\n                            \n                            \n                                    Private\n                                resetAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                addressLabelText\n                            \n                            \n                                appearance\n                            \n                            \n                                autoCompleteOptions\n                            \n                            \n                                country\n                            \n                            \n                                invalidErrorText\n                            \n                            \n                                placeholderText\n                            \n                            \n                                placeIdOnly\n                            \n                            \n                                requiredErrorText\n                            \n                            \n                                strictBounds\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onAutocompleteSelected\n                            \n                            \n                                onChange\n                            \n                            \n                                onLocationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsAPILoader: MapsAPILoader, _ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/module/component/mat-google-maps-autocomplete.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :     PlaceResult | string\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addressLabelText\n                    \n                \n                \n                    \n                        Default value : 'Address'\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        appearance\n                    \n                \n                \n                    \n                        Type :         string | Appearance\n\n                    \n                \n                \n                    \n                        Default value : Appearance.STANDARD\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoCompleteOptions\n                    \n                \n                \n                    \n                        Type :     AutocompleteOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invalidErrorText\n                    \n                \n                \n                    \n                        Default value : 'The address is not valid'\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Default value : 'Please enter the address'\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeIdOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredErrorText\n                    \n                \n                \n                    \n                        Default value : 'The address is required'\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strictBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        types\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:55\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onAutocompleteSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLocationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:71\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initGoogleMapsAutocomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initGoogleMapsAutocomplete()\n                \n            \n\n\n            \n                \n                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onQuery(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressSearchControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl({value: null}, Validators.compose([\n    Validators.required,\n    this.addressValidator.validate()])\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addressValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatValidateAddressDirective\n\n                        \n                    \n                    \n                        \n                            Default value : new MatValidateAddressDirective()\n                        \n                    \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onNewPlaceResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchElementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('search', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, EventEmitter, Input, NgZone, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MapsAPILoader} from '@agm/core';\nimport {MatValidateAddressDirective} from '../directives/address-validator/mat-address-validator.directive';\nimport {Location} from '../interfaces/location.interface';\nimport PlaceResult = google.maps.places.PlaceResult;\nimport AutocompleteOptions = google.maps.places.AutocompleteOptions;\n\nexport enum Appearance {\n  STANDARD = 'standard',\n  FILL = 'fill',\n  OUTLINE = 'outline',\n  LEGACY = 'legacy',\n}\n\n@Component({\n  selector: 'mat-google-maps-autocomplete',\n  exportAs: 'matGoogleMapsAutocomplete',\n  templateUrl: './mat-google-maps-autocomplete.component.html',\n  styleUrls: ['./mat-google-maps-autocomplete.component.scss']\n})\nexport class MatGoogleMapsAutocompleteComponent implements OnInit {\n\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n  @Input()\n  addressLabelText = 'Address';\n\n  @Input()\n  placeholderText = 'Please enter the address';\n\n  @Input()\n  requiredErrorText = 'The address is required';\n\n  @Input()\n  invalidErrorText = 'The address is not valid';\n\n  @Input()\n  appearance: string | Appearance = Appearance.STANDARD;\n\n  @Input()\n  address: PlaceResult | string;\n\n  @Input()\n  country: string | string[];\n\n  @Input()\n  placeIdOnly?: boolean;\n\n  @Input()\n  strictBounds?: boolean;\n\n  @Input()\n  types?: string[];\n  // types: string[] = ['address'];\n\n  @Input()\n  type?: string;\n\n  @Input()\n  autoCompleteOptions: AutocompleteOptions = {};\n\n  @Output()\n  onChange: EventEmitter = new EventEmitter();\n\n  @Output()\n  onAutocompleteSelected: EventEmitter = new EventEmitter();\n\n  @Output()\n  onLocationSelected: EventEmitter = new EventEmitter();\n\n  private onNewPlaceResult: EventEmitter = new EventEmitter();\n  private addressValidator: MatValidateAddressDirective = new MatValidateAddressDirective();\n\n  public addressSearchControl: FormControl = new FormControl({value: null}, Validators.compose([\n    Validators.required,\n    this.addressValidator.validate()])\n  );\n\n  constructor(private _mapsAPILoader: MapsAPILoader,\n              private _ngZone: NgZone) {\n  }\n\n  ngOnInit(): void {\n    this.addressValidator.subscribe(this.onNewPlaceResult);\n\n    const options: AutocompleteOptions = {\n      // types: ['address'],\n      // componentRestrictions: {country: this.country},\n      placeIdOnly: this.placeIdOnly,\n      strictBounds: this.strictBounds,\n      // types: this.types,\n      type: this.type\n    };\n\n    // tslint:disable-next-line:no-unused-expression\n    this.country ? options.componentRestrictions = {country: this.country} : null;\n    // tslint:disable-next-line:no-unused-expression\n    this.country ? options.types = this.types : null;\n\n    this.autoCompleteOptions = Object.assign(this.autoCompleteOptions, options);\n    this.initGoogleMapsAutocomplete();\n  }\n\n  public initGoogleMapsAutocomplete() {\n    this._mapsAPILoader\n      .load()\n      .then(() => {\n        const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, this.autoCompleteOptions);\n        autocomplete.addListener('place_changed', () => {\n          this._ngZone.run(() => {\n            // get the place result\n            const place: PlaceResult = autocomplete.getPlace();\n\n            if (!place.place_id || place.geometry === undefined || place.geometry === null) {\n              // place result is not valid\n              return;\n            } else {\n              // show dialog to select a address from the input\n              // emit failed event\n            }\n            this.address = place.formatted_address;\n            this.onAutocompleteSelected.emit(place);\n            // console.log('onAutocompleteSelected -> ', place);\n            this.onLocationSelected.emit(\n              {\n                latitude: place.geometry.location.lat(),\n                longitude: place.geometry.location.lng()\n              })\n          });\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  public onQuery(event: any) {\n    // console.log('onChange()', event);\n    this.onChange.emit(this.address);\n  }\n\n  private resetAddress() {\n    this.address = null;\n    this.addressSearchControl.updateValueAndValidity();\n  }\n\n}\n\n    \n\n    \n        \n  {{addressLabelText}}\n  \n  \n    {{requiredErrorText}}\n  \n  \n    {{invalidErrorText}}\n  \n\n\n    \n\n    \n                \n                    ./mat-google-maps-autocomplete.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{addressLabelText}}        {{requiredErrorText}}        {{invalidErrorText}}  '\n    var COMPONENTS = [{'name': 'MatGoogleMapsAutocompleteComponent', 'selector': 'mat-google-maps-autocomplete'}];\n    var DIRECTIVES = [{'name': 'MatGoogleMapsAutocompleteDirective', 'selector': '[matGoogleMapsAutocomplete]'},{'name': 'MatValidateAddressDirective', 'selector': '[mat-address-validate][formControlName],[MatValidateAddress][formControl],[MatValidateAddress][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MatGoogleMapsAutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MatGoogleMapsAutocompleteDirective.html":{"url":"directives/MatGoogleMapsAutocompleteDirective.html","title":"directive - MatGoogleMapsAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MatGoogleMapsAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/directives/mat-google-maps-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [matGoogleMapsAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressSearchControl\n                            \n                            \n                                    Private\n                                addressValidator\n                            \n                            \n                                    Public\n                                elemRef\n                            \n                            \n                                    Public\n                                mapsAPILoader\n                            \n                            \n                                    Private\n                                onNewPlaceResult\n                            \n                            \n                                    Public\n                                platformId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initGoogleMapsAutocomplete\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                autoCompleteOptions\n                            \n                            \n                                country\n                            \n                            \n                                placeIdOnly\n                            \n                            \n                                strictBounds\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onAutocompleteSelected\n                            \n                            \n                                onChange\n                            \n                            \n                                onLocationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string, elemRef: ElementRef, mapsAPILoader: MapsAPILoader, _ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elemRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :     PlaceResult | string\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoCompleteOptions\n                    \n                \n                \n                    \n                        Type :     AutocompleteOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeIdOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strictBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        types\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:29\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onAutocompleteSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLocationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:44\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initGoogleMapsAutocomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initGoogleMapsAutocomplete()\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressSearchControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl({value: null}, Validators.compose([\n    Validators.required,\n    this.addressValidator.validate()])\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addressValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatValidateAddressDirective\n\n                        \n                    \n                    \n                        \n                            Default value : new MatValidateAddressDirective()\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elemRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapsAPILoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapsAPILoader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onNewPlaceResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platformId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(PLATFORM_ID)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, EventEmitter, Inject, Input, NgZone, OnInit, Output, PLATFORM_ID} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatValidateAddressDirective} from '../directives/address-validator/mat-address-validator.directive';\nimport {MapsAPILoader} from '@agm/core';\nimport {Location} from '../interfaces/location.interface';\nimport PlaceResult = google.maps.places.PlaceResult;\nimport AutocompleteOptions = google.maps.places.AutocompleteOptions;\nimport {isPlatformBrowser} from '@angular/common';\n\n@Directive({\n  selector: '[matGoogleMapsAutocomplete]',\n  exportAs: 'matGoogleMapsAutocomplete',\n})\nexport class MatGoogleMapsAutocompleteDirective implements OnInit {\n\n  @Input()\n  address: PlaceResult | string;\n\n  @Input()\n  country: string | string[];\n\n  @Input()\n  placeIdOnly?: boolean;\n\n  @Input()\n  strictBounds?: boolean;\n\n  @Input()\n  types?: string[];\n\n  @Input()\n  type?: string;\n\n  @Input()\n  autoCompleteOptions: AutocompleteOptions = {};\n\n  @Output()\n  onChange: EventEmitter = new EventEmitter();\n\n  @Output()\n  onAutocompleteSelected: EventEmitter = new EventEmitter();\n\n  @Output()\n  onLocationSelected: EventEmitter = new EventEmitter();\n\n  private onNewPlaceResult: EventEmitter = new EventEmitter();\n  private addressValidator: MatValidateAddressDirective = new MatValidateAddressDirective();\n\n  public addressSearchControl: FormControl = new FormControl({value: null}, Validators.compose([\n    Validators.required,\n    this.addressValidator.validate()])\n  );\n\n  constructor(@Inject(PLATFORM_ID) public platformId: string,\n              public elemRef: ElementRef,\n              public mapsAPILoader: MapsAPILoader,\n              private _ngZone: NgZone) {\n  }\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.addressValidator.subscribe(this.onNewPlaceResult);\n      const options: AutocompleteOptions = {\n        // types: ['address'],\n        // componentRestrictions: {country: this.country},\n        placeIdOnly: this.placeIdOnly,\n        strictBounds: this.strictBounds,\n        // types: this.types,\n        type: this.type\n      };\n\n      // tslint:disable-next-line:no-unused-expression\n      this.country ? options.componentRestrictions = {country: this.country} : null;\n      // tslint:disable-next-line:no-unused-expression\n      this.country ? options.types = this.types : null;\n\n      this.autoCompleteOptions = Object.assign(this.autoCompleteOptions, options);\n      this.initGoogleMapsAutocomplete();\n    }\n\n  }\n\n  public initGoogleMapsAutocomplete() {\n    this.mapsAPILoader\n      .load()\n      .then(() => {\n        const autocomplete = new google.maps.places.Autocomplete(this.elemRef.nativeElement, this.autoCompleteOptions);\n        autocomplete.addListener('place_changed', () => {\n          this._ngZone.run(() => {\n            // get the place result\n            const place: PlaceResult = autocomplete.getPlace();\n\n            if (!place.place_id || place.geometry === undefined || place.geometry === null) {\n              // place result is not valid\n              return;\n            } else {\n              // show dialog to select a address from the input\n              // emit failed event\n            }\n            this.address = place.formatted_address;\n            this.onAutocompleteSelected.emit(place);\n            this.onLocationSelected.emit(\n              {\n                latitude: place.geometry.location.lat(),\n                longitude: place.geometry.location.lng()\n              })\n          });\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatGoogleMapsAutocompleteModule.html":{"url":"modules/MatGoogleMapsAutocompleteModule.html","title":"module - MatGoogleMapsAutocompleteModule","body":"\n                   \n\n\n\n\n    Modules\n    MatGoogleMapsAutocompleteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatGoogleMapsAutocompleteModule\n\n\n\ncluster_MatGoogleMapsAutocompleteModule_declarations\n\n\n\ncluster_MatGoogleMapsAutocompleteModule_exports\n\n\n\n\nMatGoogleMapsAutocompleteComponent\n\nMatGoogleMapsAutocompleteComponent\n\n\n\nMatGoogleMapsAutocompleteModule\n\nMatGoogleMapsAutocompleteModule\n\nMatGoogleMapsAutocompleteModule -->\n\nMatGoogleMapsAutocompleteComponent->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatGoogleMapsAutocompleteDirective\n\nMatGoogleMapsAutocompleteDirective\n\nMatGoogleMapsAutocompleteModule -->\n\nMatGoogleMapsAutocompleteDirective->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatValidateAddressDirective\n\nMatValidateAddressDirective\n\nMatGoogleMapsAutocompleteModule -->\n\nMatValidateAddressDirective->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatGoogleMapsAutocompleteComponent \n\nMatGoogleMapsAutocompleteComponent \n\nMatGoogleMapsAutocompleteComponent  -->\n\nMatGoogleMapsAutocompleteModule->MatGoogleMapsAutocompleteComponent \n\n\n\n\n\nMatGoogleMapsAutocompleteDirective \n\nMatGoogleMapsAutocompleteDirective \n\nMatGoogleMapsAutocompleteDirective  -->\n\nMatGoogleMapsAutocompleteModule->MatGoogleMapsAutocompleteDirective \n\n\n\n\n\nMatValidateAddressDirective \n\nMatValidateAddressDirective \n\nMatValidateAddressDirective  -->\n\nMatGoogleMapsAutocompleteModule->MatValidateAddressDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/mat-google-maps-autocomplete.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatGoogleMapsAutocompleteComponent\n                        \n                        \n                            MatGoogleMapsAutocompleteDirective\n                        \n                        \n                            MatValidateAddressDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatGoogleMapsAutocompleteComponent\n                        \n                        \n                            MatGoogleMapsAutocompleteDirective\n                        \n                        \n                            MatValidateAddressDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/module/mat-google-maps-autocomplete.module.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {MatGoogleMapsAutocompleteComponent} from './component/mat-google-maps-autocomplete.component';\nimport {MatInputModule} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatValidateAddressDirective} from './directives/address-validator/mat-address-validator.directive';\nimport {MatGoogleMapsAutocompleteDirective} from './directives/mat-google-maps-autocomplete.directive';\n\n// Export module's public API\nexport {MatGoogleMapsAutocompleteComponent, Appearance} from './component/mat-google-maps-autocomplete.component';\nexport {MatValidateAddressDirective} from './directives/address-validator/mat-address-validator.directive';\nexport {MatGoogleMapsAutocompleteDirective} from './directives/mat-google-maps-autocomplete.directive';\nexport {Location} from './interfaces/location.interface';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule\n  ],\n  exports: [\n    MatGoogleMapsAutocompleteComponent,\n    MatGoogleMapsAutocompleteDirective,\n    MatValidateAddressDirective\n  ],\n  declarations: [\n    MatGoogleMapsAutocompleteComponent,\n    MatGoogleMapsAutocompleteDirective,\n    MatValidateAddressDirective\n  ]\n})\nexport class MatGoogleMapsAutocompleteModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MatGoogleMapsAutocompleteModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MatValidateAddressDirective.html":{"url":"directives/MatValidateAddressDirective.html","title":"directive - MatValidateAddressDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MatValidateAddressDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/directives/address-validator/mat-address-validator.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => MatValidateAddressDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [mat-address-validate][formControlName],[MatValidateAddress][formControl],[MatValidateAddress][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _address\n                            \n                            \n                                    Public\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    address\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe(eventEmitter: EventEmitter)\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventEmitter\n                                    \n                                            EventEmitter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate()\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PlaceResult\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n\n                \n                    \n                        getaddress()\n                    \n                \n                            \n                                \n                                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:43\n                                \n                            \n\n                \n                    \n                        setaddress(value)\n                    \n                \n                            \n                                \n                                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Directive, EventEmitter, forwardRef} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn} from '@angular/forms';\nimport PlaceResult = google.maps.places.PlaceResult;\n\n// https://github.com/angular/angular/blob/master/packages/forms/src/directives/validators.ts\n\n@Directive({\n  selector: '[mat-address-validate][formControlName],[MatValidateAddress][formControl],[MatValidateAddress][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => MatValidateAddressDirective), multi: true}\n  ]\n})\nexport class MatValidateAddressDirective implements Validator {\n\n  public subscription: any;\n\n  private _address: PlaceResult;\n\n\n  constructor() {\n  }\n\n  public validate(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | any => {\n      return this.address ? null : {\n        validateAddress: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  public subscribe(eventEmitter: EventEmitter) {\n    this.subscription = eventEmitter.subscribe((address: PlaceResult) => {\n      this.address = address;\n    });\n  }\n\n  public unsubscribe() {\n    this.subscription.unsubscribe();\n  }\n\n  get address() {\n    return this._address;\n  }\n\n  set address(value) {\n    this._address = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/testing/mock-ng-zone.ts\n        \n\n            \n                Description\n            \n            \n                Mock synchronous NgZone implementation that can be used\nto flush out onStable subscriptions in tests.\nvia: https://github.com/angular/angular/blob/master/packages/core/testing/src/ng_zone_mock.ts\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/module/testing/mock-ng-zone.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/module/testing/mock-ng-zone.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/module/testing/mock-ng-zone.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in src/module/testing/mock-ng-zone.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/module/testing/mock-ng-zone.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, NgZone} from '@angular/core';\n\n\n/**\n * Mock synchronous NgZone implementation that can be used\n * to flush out `onStable` subscriptions in tests.\n *\n * via: https://github.com/angular/angular/blob/master/packages/core/testing/src/ng_zone_mock.ts\n * @docs-private\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({enableLongStackTrace: false});\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n2.0.0 (2019-07-23)\nBug Fixes\n\ndemo: solved rendering issue (6b9582c)\ndemo: updated angular and other deps (ede64ca)\ndemo: updated angular flex layout to v8 (0faf3dc)\ndemo: updated angular to v8 (2a32477)\ndemo: updated angular to v8.1.2 (4fc3521)\ndemo: updated angular, material and other dependencies (df4282b)\npackage: fixed version of the compiler and compiler cli (5ad7ae2)\npackage: updated angular and material to v8 #133 (da2e294)\npackage: updated angular and other deps (88079ea)\npackage: updated rollup (ab9fb55)\npackage: updated the angular dependencies (4b1d51f)\npackage: updated the schematics (b2b441f)\n\nFeatures\n\nproject: added a second demo app (3f07d26)\n\n1.6.1 (2019-05-05)\nBug Fixes\n\npackage: options.push is not a function fixed #104 (2cf8d4f)\n\n1.6.0 (2019-05-04)\nBug Fixes\n\ndemo: downgraded @angular/platform-browser to v7.2.12 (80f2005)\ndemo: updated angular and other dependencies (02fb365)\ndemo: updated angular and other dependencies (59d34a7)\ndemo-schematics: minor #69 (7a1804a)\npackage: added @angular-devkit/schematics as dev dependency #69 (6ec7bb1)\npackage: minor #69 (dd10b9b)\npackage: prevent invalid value error for the directive as well #100 (8ebe3fb)\npackage: prevent invalid value error when type or country are null #100 (80014cd)\npackage: updated postcss and rollup (eca3761)\npackage: updated rollup to v1 (98125e2)\npackage: updated the schematics #69 (9281882)\n\nFeatures\n\ndemo-schematics: added a brand new demo app for angular schematics (5ad3513)\n\n1.5.0 (2019-04-02)\nBug Fixes\n\ndemo: updated angular cdk and material to 7.3.4 (bf4af44)\ndemo: updated angular to v7.3.1 (15526c1)\ndemo: updated angular, material and other deps (ea16bb7)\ndemo: updated dependencies (4238e7d)\ndemo: updated dependencies, angular to v7.2.0 and material to v7.2.1 (a025c26)\ndemo: updated dependencies, angular to v7.2.0 and material to v7.2.1 (a4378f1)\ndemo: updated reflect metadata (7ef4da6)\ndocs: replaced onAddressSelected with onAutocompleteSelected - typo error #40 (1f88ec6)\npackage: added angular schematics (ab59926)\npackage: downgraded jest (f428a82)\npackage: initialize the autocomplete mechanism only in the browser - SSR (7519b8c)\npackage: updated angular material and other deps (c9feeff)\npackage: updated angular to v7.3.1 (5884951)\npackage: updated angular to v7.3.4 (a5f08ac)\npackage: updated jest (d180485)\npackage: updated postcss to v7.0.13 (4058ad9)\n\nFeatures\n\ndemo: updated angular and other dependencies (446bc32)\npackage: added schematics support #69 (7c145d7)\npackage: updated angular and other dependencies (69b6513)\n\n1.4.0 (2018-11-02)\nFeatures\n\npackage: support of angular v7 (22b1bd5)\n\n1.3.0 (2018-10-03)\nBug Fixes\n\npackage: fixed the path of node_module in the npm script to transpile agm core via babel (abeb505)\npackage: unexpected token import from agm core module fixed via babel v7.1.0 (5c6a295)\npackage: updated dependencies (8a41a4c)\npackage: updated typescript to v2.9.2 (66d1e24)\n\nFeatures\n\npackage: added address validator's form control to 'matGoogleMapsAutocomplete' (859c103)\npackage: simplify the library by adding the matGoogleMapsAutocomplete directive (f2b7b63)\n\n1.2.2 (2018-07-24)\nBug Fixes\n\npackage: added agm/core module to external modules for rollup (95046fd)\n\n1.2.1 (2018-07-18)\nBug Fixes\n\npackage: added dual binding for the placeholder and removed html content from inputs (78f88ca)\npackage: solved all lint errors (551743a)\n\n1.2.0 (2018-07-10)\nFeatures\n\npackage: added the appearance input to style the address mat-form-field #5 (9cf1106)\n\n1.1.0 (2018-06-30)\nFeatures\n\npackage: added additional input for mat-google-maps-autocomplete` (6f91889)\n\n1.0.0 (2018-06-18)\nBug Fixes\n\npackage: the assets path (6f0e24c)\n\nFeatures\n\npackage: added MatGoogleMapsAutocompleteComponent | mat-google-maps-autocomplete (5584cae)\npackage: added MatGoogleMapsAutocompleteModule (dadcddd)\npackage: added MatValidateAddressDirective | matValidateAddress (60e44cd)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.7\n        \n            @angular/animations : ^8.1.2\n        \n            @angular/cdk : ^8.1.1\n        \n            @angular/common : ^8.1.2\n        \n            @angular/core : ^8.1.2\n        \n            @angular/forms : ^8.1.2\n        \n            @angular/material : ^8.1.1\n        \n            @types/googlemaps : ^3.37.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Appearance   (src/.../mat-google-maps-autocomplete.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/module/component/mat-google-maps-autocomplete.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Appearance\n                    \n                \n                        \n                            \n                                 STANDARD\n                            \n                        \n                        \n                            \n                                Value : standard\n                            \n                        \n                        \n                            \n                                 FILL\n                            \n                        \n                        \n                            \n                                Value : fill\n                            \n                        \n                        \n                            \n                                 OUTLINE\n                            \n                        \n                        \n                            \n                                Value : outline\n                            \n                        \n                        \n                            \n                                 LEGACY\n                            \n                        \n                        \n                            \n                                Value : legacy\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addModuleToImports   (src/.../index.ts)\n                        \n                        \n                            addPackageJsonDependencies   (src/.../index.ts)\n                        \n                        \n                            getPackageVersionFromPackageJson   (src/.../index.ts)\n                        \n                        \n                            installPackageJsonDependencies   (src/.../index.ts)\n                        \n                        \n                            loadPackageVersionGracefully   (src/.../index.ts)\n                        \n                        \n                            Unnamed function   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schematics/src/ng-add/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addModuleToImports\n                        \n                        \n                    \n                \n            \n            \n                \naddModuleToImports(options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPackageVersionFromPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetPackageVersionFromPackageJson(tree, name)\n                \n            \n\n\n\n\n            \n                \n                    Gets the version of the specified package by looking at the package.json in the given tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPackageVersionGracefully\n                        \n                        \n                    \n                \n            \n            \n                \nloadPackageVersionGracefully(context)\n                \n            \n\n\n\n\n            \n                \n                    Loads the full version from the given Angular package gracefully. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@angular-material-extensions/google-maps-autocomplete - Autocomplete input component for google-maps built with angular material design\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\nStating with v1.3.0, you can now use this library without material2's dependency! To\nenable this goolgle maps autocomplate api as feature, you can just add matGoogleMapsAutocomplete \nto any html input element! \nBuilt by and for developers :heart:\nDo you have any question or suggestion ? Please do not hesitate to contact us!\nAlternatively, provide a PR | open an appropriate issue here\nIf did you like this project, support angular-material-extensions \nby starring :star: and sharing it :loudspeaker:\nTable of Contents\n\nDemo\nDependencies\nPeer Dependencies\nAdditional Requirements - material (Include a theme)\nInstallation\nUsage\nDocumentation\nRun Demo App Locally\nDevelopment\nOther Angular Libraries\nSupport\nLicense\n\n\n\nDemo\nView all the directives and components in action at https://angular-material-extensions.github.io/google-maps-autocomplete\n\n\nDependencies\n\nAngular (requires Angular 2 or higher)\n\nfor the directive as standalone you just need to install the agm core module\n- agm - angular google maps v1.0.0-beta.5\nbash\nnpm i @agm/core\noptional\nbash\nnpm i -D @types/googlemaps\n\n\nInstallation\n1. Install via ng add. (Recommended)\nIf Angular Material Design is not setup, just run ng add @angular/material learn more\nNow add the library via the angular schematics and everything will be setup for you\nshell\nng add @angular-material-extensions/google-maps-autocomplete\n2. Install via npm. (Alternative)\nNow install @angular-material-extensions/google-maps-autocomplete via:\nshell\nnpm install --save @angular-material-extensions/google-maps-autocomplete\n\n\nRequirements (peer dependencies):\nfor the ui input component, please consider to install the following packages\n- angular animations v7.x\n- angular forms v7.x\nif your are not using the directive but the mat-google-maps-autocomplete component\n- angular material v7.x\n- angular cdk v7.x\nbash\nnpm i @angular/cdk @angular/material @angular/animations @angular/forms\n\n\nAdditional requirements Theme (Material Design)\n\nangular material theme\n\n\nSystemJS\n\nNote:If you are using SystemJS, you should adjust your configuration to point to the UMD bundle.\nIn your systemjs config file, map needs to tell the System loader where to look for @angular-material-extensions/google-maps-autocomplete:\n```js\nmap: {\n  '@angular-material-extensions/google-maps-autocomplete': 'node_modules/@angular-material-extensions/google-maps-autocomplete/bundles/google-maps-autocomplete.umd.js',\n}\n\n```\nOnce installed you need to import the main module:\njs\nimport { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';\nThe only remaining part is to list the imported module in your application module. The exact method will be slightly\ndifferent for the root (top-level) module for which you should end up with the code similar to (notice MatGoogleMapsAutocompleteModule.forRoot()):\n```js\nimport { AgmCoreModule } from '@agm/core';\nimport { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n     AgmCoreModule.forRoot({\n          apiKey: 'YOUR_KEY',\n          libraries: ['places']\n        }),\n     MatGoogleMapsAutocompleteModule.forRoot(), ...],  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n```\nOther modules in your application can simply import MatGoogleMapsAutocompleteModule:\n```js\nimport { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';\n@NgModule({\n  declarations: [OtherComponent, ...],\n  imports: [\n     MatGoogleMapsAutocompleteModule, ...], \n})\nexport class OtherModule {\n}\n```\n\n\nUsage\nAs directive\nadd matGoogleMapsAutocomplete to your target html input element to enable the google maps autocomplete api as feature\nhtml\n\n  Address >\n  \n\nAs components\nor alternatively use mat-google-maps-auto-complete, the UI wrapper\nadd mat-google-maps-auto-complete element to your template\nmat-google-maps-auto-complete\nhtml\n\n      \nA customized mat-google-maps-autocomplete \nhtml\n\n\ncombine the result of the mat-google-maps-autocomplete with a google map instance via @agm\n```html\n\n\n\n  \n    \n  \n\n\n\n  \n  \n  \n```\n\n\nin your component, the code will be similar to --> \n```typescript\nimport {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Title} from '@angular/platform-browser';\nimport {Location, Appearance} from '@angular-material-extensions/google-maps-autocomplete';\nimport {} from '@types/googlemaps';\nimport PlaceResult = google.maps.places.PlaceResult;\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent implements OnInit {\n  public appearance = Appearance;\n  public zoom: number;\n  public latitude: number;\n  public longitude: number;\n  public selectedAddress: PlaceResult;\n  constructor(private titleService: Title) {\n  }\n  ngOnInit() {\n    this.titleService.setTitle('Home | @angular-material-extensions/google-maps-autocomplete');\nthis.zoom = 10;\nthis.latitude = 52.520008;\nthis.longitude = 13.404954;\n\nthis.setCurrentPosition();  }\n  private setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n        this.zoom = 12;\n      });\n    }\n  }\n  onAutocompleteSelected(result: PlaceResult) {\n    console.log('onAutocompleteSelected: ', result);\n  }\n  onLocationSelected(location: Location) {\n    console.log('onLocationSelected: ', location);\n    this.latitude = location.latitude;\n    this.longitude = location.longitude;\n  }\n}\n```\n\n\nAPI - for more info please visit the official documentation Maps JavaScript API\nmatGoogleMapsAutocomplete\n| option | bind  |  type  |   default    | description  |\n|:-------------------|:--------:|:------:|:------------:|:-------------------------------------------------------------------------------------------------|| address             | Input()   |  PlaceResult | string;      | - || country             | Input()   | string | string[];          | - | can be used to restrict results to specific groups. Currently, you can use componentRestrictions to filter by up to 5 countries. Countries must be passed as as a two-character, ISO 3166-1 Alpha-2 compatible country code. Multiple countries must be passed as a list of country codes.| placeIdOnly         | Input()   | boolean                     | - | can be used to instruct the Autocomplete widget to retrieve only Place IDs. On calling getPlace() on the Autocomplete object, the PlaceResult made available will only have the place id, types and name properties set. You can use the returned place ID with calls to the Places, Geocoding, Directions or Distance Matrix services.\n| strictBounds        | Input()   | boolean                     | - | is a boolean specifying whether the API must return only those places that are strictly within the region defined by the given bounds. The API does not return results outside this region even if they match the user input.\n| types               | Input()   | string[]                    | - |  An array of types specifies an explicit type or a type collection, as listed in the supported types below. If nothing is specified, all types are returned. In general only a single type is allowed. The exception is that you can safely mix the geocode and establishment types, but note that this will have the same effect as specifying no types. Supported types are listed below. |\n| type                | Input()   | string                      | - || autoCompleteOptions | Input()   | AutocompleteOptions         | - |  all above inputs in one object! The passed data to this object will be merged with the input if they exists\n| onChange            | Output()  | PlaceResult | string | null | - |  event when the input form value changed\n| onAutocompleteSelected   | Output()  | PlaceResult            | - |  the event will be fired when a place has been selected via the google maps autocomplete component\n| onLocationSelected  | Output()  | Location                    | - |  the event will be fired when a place has been selected via the google maps autocomplete component |\nSupported Types\n| type | description |\n| --- | --- |\n| geocode | instructs the Places service to return only geocoding results, rather than business results. |\n| address | instructs the Places service to return only geocoding results with a precise address. | \n| establishment | instructs the Places service to return only business results. |\n|regions | instructs the Places service to return any result matching the following types: locality, sublocality, postal_code, country, administrative_area1, administrative_area2 |\n| cities | instructs the Places service to return results that match either locality or administrative_area3. |\nmat-google-maps-autocomplete\neverything included in matGoogleMapsAutocomplete + the following\n| option | bind  |  type  |   default    | description  |\n|:-------------------|:--------:|:------:|:------------:|:-------------------------------------------------------------------------------------------------|| addressLabelText  | Input()   |  string;      | Address using the component |  self explanatory\n| placeholderText  | Input()   |  string;      | Please enter the address |  self explanatory\n| requiredErrorText  | Input()   |  string;      | The address is required |  self explanatory\n| invalidErrorText  | Input()   |  string;      | The address is not valid |  self explanatory\n| appearance          | Input()   |  Appearance | string;      | Appearance.STANDARD |  Style the mat-form-field by setting the appearance option : standard, fill, outline or legacy\n\n\nDocumentation\nPlease checkout the full documentation here \nor follow the official tutorial\n\n\nRun Demo App Locally\n\nclone this repo by running\nbash\n$ git clone https://github.com/angular-material-extensions/google-maps-autocomplete.git\n\nlink the @angular-material-extensions/google-maps-autocomplete package\n\n\nbash\n$ gulp link\n\nnavigate to the demo app directory, install the dependencies and serve the app\nbash\n$ cd demo && npm i && npm start\n\nthe app is now hosted by http://localhost:4200/\n\n\n\n\nDevelopment\n\nclone this repo\nInstall the dependencies by running npm i\nbuild the library npm run build or gulp build\n\nbash\n$ npm run build\n\nLink the library \nbash\n$ gulp link\n\n\nNavigate to the demo app's directory\ncd demo\n_ npm i\n_ npm start\n\n\n\n\n\nOther Angular Libraries\n\nngx-auth-firebaseui\nngx-linkifyjs\n@firebaseui/ng-bootstrap\n@angular-material-extensions/pages\n@angular-material-extensions/link-preview\n@angular-material-extensions/password-strength\n@angular-material-extensions/faq\n@angular-material-extensions/contacts\n@angular-material-extensions/combination-generator\n\n\n\nSupport\n\nDrop an email to: Anthony Nahas\n\nor open an appropriate issue\n\nlet us chat on Gitter\nBuilt by and for developers :heart: we will help you :punch:\n\n\nLicense\nCopyright (c) 2019 Anthony Nahas. Licensed under the MIT License (MIT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Anthony Nahas\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MatGoogleMapsAutocompleteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatGoogleMapsAutocompleteModule\n\n\n\ncluster_MatGoogleMapsAutocompleteModule_declarations\n\n\n\ncluster_MatGoogleMapsAutocompleteModule_exports\n\n\n\n\nMatGoogleMapsAutocompleteComponent\n\nMatGoogleMapsAutocompleteComponent\n\n\n\nMatGoogleMapsAutocompleteModule\n\nMatGoogleMapsAutocompleteModule\n\nMatGoogleMapsAutocompleteModule -->\n\nMatGoogleMapsAutocompleteComponent->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatGoogleMapsAutocompleteDirective\n\nMatGoogleMapsAutocompleteDirective\n\nMatGoogleMapsAutocompleteModule -->\n\nMatGoogleMapsAutocompleteDirective->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatValidateAddressDirective\n\nMatValidateAddressDirective\n\nMatGoogleMapsAutocompleteModule -->\n\nMatValidateAddressDirective->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatGoogleMapsAutocompleteComponent \n\nMatGoogleMapsAutocompleteComponent \n\nMatGoogleMapsAutocompleteComponent  -->\n\nMatGoogleMapsAutocompleteModule->MatGoogleMapsAutocompleteComponent \n\n\n\n\n\nMatGoogleMapsAutocompleteDirective \n\nMatGoogleMapsAutocompleteDirective \n\nMatGoogleMapsAutocompleteDirective  -->\n\nMatGoogleMapsAutocompleteModule->MatGoogleMapsAutocompleteDirective \n\n\n\n\n\nMatValidateAddressDirective \n\nMatValidateAddressDirective \n\nMatValidateAddressDirective  -->\n\nMatGoogleMapsAutocompleteModule->MatValidateAddressDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
